#!/bin/bash

# OptimalyAI PostgreSQL Docker Manager
# Jednoduch√Ω skript pro spr√°vu PostgreSQL datab√°ze

set -e

# Barvy pro v√Ωstup
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funkce pro zobrazen√≠ menu
show_menu() {
    echo -e "\n${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${BLUE}   OptimalyAI PostgreSQL Manager${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
    echo "1) üöÄ Start datab√°ze"
    echo "2) üõë Stop datab√°ze"
    echo "3) üîÑ Restart datab√°ze"
    echo "4) üìä Status"
    echo "5) üìù Zobrazit logy"
    echo "6) üîå P≈ôipojit se do psql"
    echo "7) üåê Otev≈ô√≠t pgAdmin"
    echo "8) üíæ Backup datab√°ze"
    echo "9) üì• Restore datab√°ze"
    echo "10) üóëÔ∏è  Smazat v≈°e (POZOR!)"
    echo "11) ‚ÑπÔ∏è  Zobrazit connection string"
    echo "0) ‚ùå Konec"
    echo -e "\n${YELLOW}Vyber mo≈ænost:${NC} "
}

# Start datab√°ze
start_db() {
    echo -e "${GREEN}Spou≈°t√≠m PostgreSQL a pgAdmin...${NC}"
    docker-compose up -d
    echo -e "${GREEN}‚úÖ Datab√°ze bƒõ≈æ√≠ na localhost:5432${NC}"
    echo -e "${GREEN}‚úÖ pgAdmin bƒõ≈æ√≠ na http://localhost:5050${NC}"
    echo -e "${YELLOW}   Email: admin@optimaly.ai${NC}"
    echo -e "${YELLOW}   Heslo: admin123${NC}"
}

# Stop datab√°ze
stop_db() {
    echo -e "${YELLOW}Zastavuji datab√°zi...${NC}"
    docker-compose down
    echo -e "${GREEN}‚úÖ Datab√°ze zastavena${NC}"
}

# Status
show_status() {
    echo -e "${BLUE}Status slu≈æeb:${NC}"
    docker-compose ps
}

# Logy
show_logs() {
    echo -e "${BLUE}Zobrazuji posledn√≠ch 50 ≈ô√°dk≈Ø log≈Ø:${NC}"
    docker-compose logs --tail=50 postgres
}

# P≈ôipojen√≠ do psql
connect_psql() {
    echo -e "${GREEN}P≈ôipojuji se do PostgreSQL...${NC}"
    docker-compose exec postgres psql -U optimaly -d optimalyai_db
}

# Otev≈ô√≠t pgAdmin
open_pgadmin() {
    echo -e "${GREEN}Otev√≠r√°m pgAdmin...${NC}"
    open http://localhost:5050
}

# Backup
backup_db() {
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    BACKUP_FILE="backup_${TIMESTAMP}.sql"
    echo -e "${YELLOW}Vytv√°≈ô√≠m backup do ${BACKUP_FILE}...${NC}"
    docker-compose exec -T postgres pg_dump -U optimaly optimalyai_db > "backups/${BACKUP_FILE}"
    echo -e "${GREEN}‚úÖ Backup vytvo≈ôen: backups/${BACKUP_FILE}${NC}"
}

# Restore
restore_db() {
    echo -e "${YELLOW}Dostupn√© backupy:${NC}"
    ls -la backups/*.sql 2>/dev/null || echo "≈Ω√°dn√© backupy nenalezeny"
    echo -e "\n${YELLOW}Zadej n√°zev souboru pro restore:${NC} "
    read backup_file
    if [ -f "backups/${backup_file}" ]; then
        echo -e "${YELLOW}Obnovuji datab√°zi z ${backup_file}...${NC}"
        docker-compose exec -T postgres psql -U optimaly optimalyai_db < "backups/${backup_file}"
        echo -e "${GREEN}‚úÖ Datab√°ze obnovena${NC}"
    else
        echo -e "${RED}‚ùå Soubor nenalezen${NC}"
    fi
}

# Smazat v≈°e
destroy_all() {
    echo -e "${RED}‚ö†Ô∏è  VAROV√ÅN√ç: Toto sma≈æe v≈°echna data!${NC}"
    echo -e "${YELLOW}Opravdu chce≈° smazat datab√°zi a v≈°echna data? (ano/ne):${NC} "
    read confirm
    if [ "$confirm" = "ano" ]; then
        docker-compose down -v
        echo -e "${GREEN}‚úÖ V≈°e smaz√°no${NC}"
    else
        echo -e "${YELLOW}Akce zru≈°ena${NC}"
    fi
}

# Connection string
show_connection() {
    echo -e "${BLUE}Connection string pro appsettings.json:${NC}"
    echo -e "${GREEN}\"DefaultConnection\": \"Host=localhost;Port=5432;Database=optimalyai_db;Username=optimaly;Password=OptimalyAI2024!\"${NC}"
    echo -e "\n${BLUE}Entity Framework migrations:${NC}"
    echo -e "${GREEN}dotnet ef migrations add InitialCreate${NC}"
    echo -e "${GREEN}dotnet ef database update${NC}"
}

# Vytvo≈ôen√≠ slo≈æky pro backupy
mkdir -p backups

# Hlavn√≠ smyƒçka
while true; do
    show_menu
    read choice
    
    case $choice in
        1) start_db ;;
        2) stop_db ;;
        3) stop_db && start_db ;;
        4) show_status ;;
        5) show_logs ;;
        6) connect_psql ;;
        7) open_pgadmin ;;
        8) backup_db ;;
        9) restore_db ;;
        10) destroy_all ;;
        11) show_connection ;;
        0) echo -e "${GREEN}Nashledanou!${NC}"; exit 0 ;;
        *) echo -e "${RED}Neplatn√° volba${NC}" ;;
    esac
    
    echo -e "\n${YELLOW}Stiskni Enter pro pokraƒçov√°n√≠...${NC}"
    read
done