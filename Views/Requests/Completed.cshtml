@model IEnumerable<OAI.Core.DTOs.Business.RequestDto>
@{
    ViewData["Title"] = "Dokončené požadavky";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">@ViewData["Title"]</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/">Domů</a></li>
                    <li class="breadcrumb-item"><a href="/Requests">Požadavky</a></li>
                    <li class="breadcrumb-item active">Dokončené</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Úspěšně dokončené požadavky</h3>
                        <div class="card-tools">
                            <div class="input-group input-group-sm" style="width: 300px;">
                                <input type="text" name="table_search" class="form-control float-right" placeholder="Hledat">
                                <div class="input-group-append">
                                    <button type="submit" class="btn btn-default">
                                        <i class="fas fa-search"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (Model.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-hover" id="completedTable">
                                    <thead>
                                        <tr>
                                            <th>Číslo</th>
                                            <th>Název</th>
                                            <th>Typ</th>
                                            <th>Klient</th>
                                            <th>Dokončeno</th>
                                            <th>Doba zpracování</th>
                                            <th>Cena</th>
                                            <th>Akce</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var request in Model.OrderByDescending(r => r.UpdatedAt))
                                        {
                                            var lastExecution = request.Executions?.OrderByDescending(e => e.CompletedAt).FirstOrDefault();
                                            <tr>
                                                <td>
                                                    <a href="/Requests/@request.Id">@request.RequestNumber</a>
                                                </td>
                                                <td>@request.Title</td>
                                                <td>@GetRequestTypeText(request.RequestType)</td>
                                                <td>@request.ClientName</td>
                                                <td>
                                                    @(request.UpdatedAt?.ToString("dd.MM.yyyy HH:mm") ?? "Neznámý")
                                                </td>
                                                <td>
                                                    @if (lastExecution != null && lastExecution.CompletedAt.HasValue)
                                                    {
                                                        @FormatDuration(lastExecution.StartedAt, lastExecution.CompletedAt.Value)
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </td>
                                                <td>
                                                    @if (request.ActualCost.HasValue)
                                                    {
                                                        <span class="@(request.ActualCost > request.EstimatedCost ? "text-danger" : "text-success")">
                                                            @(request.ActualCost.Value.ToString("C"))
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </td>
                                                <td>
                                                    <a href="/Requests/@request.Id" class="btn btn-sm btn-info" title="Detail">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-success" 
                                                            onclick="downloadResults(@request.Id)" title="Stáhnout výsledky">
                                                        <i class="fas fa-download"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i> Zatím nebyly dokončeny žádné požadavky.
                            </div>
                        }
                    </div>
                    @if (Model.Any())
                    {
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-sm-3">
                                    <div class="description-block border-right">
                                        <h5 class="description-header">@Model.Count()</h5>
                                        <span class="description-text">Celkem dokončeno</span>
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="description-block border-right">
                                        <span class="description-percentage text-success"><i class="fas fa-caret-up"></i> 100%</span>
                                        <h5 class="description-header">@Model.Count(r => r.ActualCost <= r.EstimatedCost)</h5>
                                        <span class="description-text">V rámci rozpočtu</span>
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="description-block border-right">
                                        <h5 class="description-header">@CalculateAverageProcessingTime(Model)</h5>
                                        <span class="description-text">Průměrná doba</span>
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="description-block">
                                        <h5 class="description-header">@(Model.Sum(r => r.ActualCost ?? 0).ToString("C"))</h5>
                                        <span class="description-text">Celková hodnota</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Simple search functionality
            $('input[name="table_search"]').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $("#completedTable tbody tr").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });

        function downloadResults(requestId) {
            // TODO: Implement download functionality
            toastr.info('Funkce stahování výsledků bude brzy dostupná');
        }
    </script>
}

@functions {
    string GetRequestTypeText(string requestType) => requestType switch
    {
        "ProductPhoto" => "Produktové foto",
        "DocumentAnalysis" => "Analýza dokumentu",
        "WebScraping" => "Web scraping",
        "DataProcessing" => "Zpracování dat",
        "Custom" => "Vlastní",
        _ => requestType
    };

    string FormatDuration(DateTime start, DateTime end)
    {
        var duration = end - start;
        if (duration.TotalMinutes < 1)
            return $"{duration.TotalSeconds:0} s";
        if (duration.TotalHours < 1)
            return $"{duration.TotalMinutes:0} min";
        if (duration.TotalDays < 1)
            return $"{duration.TotalHours:0.#} h";
        return $"{duration.TotalDays:0.#} d";
    }

    string CalculateAverageProcessingTime(IEnumerable<OAI.Core.DTOs.Business.RequestDto> requests)
    {
        var executionsWithTime = requests
            .Where(r => r.Executions != null)
            .SelectMany(r => r.Executions)
            .Where(e => e.CompletedAt.HasValue)
            .ToList();

        if (!executionsWithTime.Any())
            return "-";

        var totalMinutes = executionsWithTime
            .Select(e => (e.CompletedAt.Value - e.StartedAt).TotalMinutes)
            .Average();

        if (totalMinutes < 60)
            return $"{totalMinutes:0} min";
        if (totalMinutes < 1440)
            return $"{totalMinutes / 60:0.#} h";
        return $"{totalMinutes / 1440:0.#} d";
    }
}