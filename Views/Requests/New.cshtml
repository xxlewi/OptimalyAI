@{
    ViewData["Title"] = "Nov√Ω po≈æadavek";
}

<!-- Content Header -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>
                    <i class="fas fa-plus-circle"></i> Nov√Ω po≈æadavek
                </h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="/Requests">Po≈æadavky</a></li>
                    <li class="breadcrumb-item active">Nov√Ω</li>
                </ol>
            </div>
        </div>
    </div>
</section>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <!-- Simple Form -->
                <form id="newRequestForm">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Vytvo≈ôit po≈æadavek</h3>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                <label>N√°zev po≈æadavku <span class="text-danger">*</span></label>
                                <input type="text" class="form-control form-control-lg" id="title" name="title" 
                                       placeholder="nap≈ô. Produktov√© fotky pro kolekci Jaro 2024" 
                                       autofocus required>
                                <small class="form-text text-muted">Zadejte kr√°tk√Ω a v√Ωsti≈æn√Ω n√°zev po≈æadavku</small>
                            </div>
                            
                            <div class="form-group">
                                <label>Z√°kazn√≠k</label>
                                <select class="form-control" id="customerId" name="customerId">
                                    <option value="">-- Vyberte z√°kazn√≠ka --</option>
                                    <option value="new">‚ûï Nov√Ω z√°kazn√≠k (rychl√© vytvo≈ôen√≠)</option>
                                </select>
                                <small class="form-text text-muted">
                                    M≈Ø≈æete vybrat existuj√≠c√≠ho z√°kazn√≠ka nebo vytvo≈ôit nov√©ho
                                </small>
                            </div>

                            <div class="form-group">
                                <label>Projekt</label>
                                <select class="form-control" id="projectId" name="projectId">
                                    <option value="">-- Vyberte projekt --</option>
                                    <option value="new">üÜï Vytvo≈ôit nov√Ω projekt z tohoto po≈æadavku</option>
                                </select>
                                <small class="form-text text-muted">
                                    M≈Ø≈æete p≈ôilo≈æit k existuj√≠c√≠mu projektu nebo vytvo≈ôit nov√Ω
                                </small>
                            </div>

                            <!-- Quick project creation -->
                            <div id="quickProjectSection" style="display: none;">
                                <div class="card bg-info">
                                    <div class="card-body">
                                        <div class="form-group mb-0">
                                            <label>N√°zev projektu <span class="text-danger">*</span></label>
                                            <input type="text" class="form-control" id="quickProjectName" 
                                                   placeholder="nap≈ô. Anal√Ωza dat pro jarn√≠ kolekci">
                                            <small class="form-text text-white">Projekt bude automaticky vytvo≈ôen p≈ôi ulo≈æen√≠ po≈æadavku</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Quick customer creation -->
                            <div id="quickCustomerSection" style="display: none;">
                                <div class="card bg-warning">
                                    <div class="card-body">
                                        <div class="form-group mb-0">
                                            <label>Jm√©no z√°kazn√≠ka <span class="text-danger">*</span></label>
                                            <input type="text" class="form-control" id="quickCustomerName" 
                                                   placeholder="Jan Nov√°k nebo Firma s.r.o.">
                                            <small class="form-text text-muted">Z√°kazn√≠k bude automaticky vytvo≈ôen p≈ôi ulo≈æen√≠ po≈æadavku</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Hidden fields with default values -->
                            <input type="hidden" id="requestType" name="requestType" value="Custom">
                            <input type="hidden" id="priority" name="priority" value="Normal">
                            <input type="hidden" id="description" name="description" value=" ">
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary btn-lg btn-block">
                                <i class="fas fa-check"></i> Vytvo≈ôit po≈æadavek
                            </button>
                            <p class="text-center mt-3 text-muted">
                                <small>V≈°echny dal≈°√≠ informace m≈Ø≈æete doplnit pozdƒõji</small>
                            </p>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    <script>
        $(document).ready(function() {
            // Load customers and projects
            loadCustomers();
            loadProjects();
            
            // Focus on title input
            $('#title').focus();
            
            // Form submission
            $('#newRequestForm').submit(function(e) {
                e.preventDefault();
                
                const title = $('#title').val().trim();
                if (!title) {
                    $('#title').addClass('is-invalid');
                    return;
                }
                
                $('#title').removeClass('is-invalid');
                createRequest();
            });
            
            // Remove invalid class on input
            $('#title').on('input', function() {
                $(this).removeClass('is-invalid');
            });
            
            // Handle customer selection change
            $('#customerId').on('change', function() {
                const selectedValue = $(this).val();
                
                if (selectedValue === 'new') {
                    $('#quickCustomerSection').slideDown();
                    $('#quickCustomerName').focus();
                } else {
                    $('#quickCustomerSection').slideUp();
                    $('#quickCustomerName').val('');
                }
            });

            // Handle project selection change
            $('#projectId').on('change', function() {
                const selectedValue = $(this).val();
                
                if (selectedValue === 'new') {
                    $('#quickProjectSection').slideDown();
                    $('#quickProjectName').focus();
                } else {
                    $('#quickProjectSection').slideUp();
                    $('#quickProjectName').val('');
                }
            });
        });
        
        function loadCustomers(selectedId = null) {
            $.ajax({
                url: '/api/customersapi',
                method: 'GET',
                success: function(response) {
                    const select = $('#customerId');
                    const currentValue = select.val();
                    
                    select.empty();
                    select.append('<option value="">-- Vyberte z√°kazn√≠ka --</option>');
                    select.append('<option value="new">‚ûï Nov√Ω z√°kazn√≠k (rychl√© vytvo≈ôen√≠)</option>');
                    
                    if (response.data && response.data.length > 0) {
                        select.append('<optgroup label="Existuj√≠c√≠ z√°kazn√≠ci">');
                        response.data.forEach(customer => {
                            const selected = (selectedId && customer.id == selectedId) ? 'selected' : '';
                            const companyInfo = customer.companyName ? ` (${customer.companyName})` : '';
                            select.append(`<option value="${customer.id}" ${selected}>${customer.name}${companyInfo}</option>`);
                        });
                        select.append('</optgroup>');
                    }
                    
                    // Restore previous selection if it was "new"
                    if (currentValue === 'new') {
                        select.val('new');
                    }
                    
                    // Check if there's a pre-selected customer from URL
                    const urlParams = new URLSearchParams(window.location.search);
                    const customerIdFromUrl = urlParams.get('customerId');
                    if (customerIdFromUrl && !selectedId) {
                        $('#customerId').val(customerIdFromUrl);
                    }
                }
            });
        }

        function loadProjects(selectedId = null) {
            $.ajax({
                url: '/api/projectsapi',
                method: 'GET',
                success: function(response) {
                    const select = $('#projectId');
                    const currentValue = select.val();
                    
                    select.empty();
                    select.append('<option value="">-- Vyberte projekt --</option>');
                    select.append('<option value="new">üÜï Vytvo≈ôit nov√Ω projekt z tohoto po≈æadavku</option>');
                    
                    if (response.data && response.data.length > 0) {
                        select.append('<optgroup label="Existuj√≠c√≠ projekty">');
                        response.data.forEach(project => {
                            const selected = (selectedId && project.id == selectedId) ? 'selected' : '';
                            const statusInfo = project.status ? ` (${project.status})` : '';
                            select.append(`<option value="${project.id}" ${selected}>${project.name}${statusInfo}</option>`);
                        });
                        select.append('</optgroup>');
                    }
                    
                    // Restore previous selection if it was "new"
                    if (currentValue === 'new') {
                        select.val('new');
                    }
                    
                    // Check if there's a pre-selected project from URL
                    const urlParams = new URLSearchParams(window.location.search);
                    const projectIdFromUrl = urlParams.get('projectId');
                    if (projectIdFromUrl && !selectedId) {
                        $('#projectId').val(projectIdFromUrl);
                    }
                }
            });
        }
        
        function createRequest() {
            const selectedCustomerValue = $('#customerId').val();
            const selectedProjectValue = $('#projectId').val();
            const submitBtn = $('#newRequestForm button[type="submit"]');
            submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Vytv√°≈ôen√≠...');
            
            // If new customer is selected, create customer first
            if (selectedCustomerValue === 'new') {
                const customerName = $('#quickCustomerName').val().trim();
                
                if (!customerName) {
                    toastr.error('N√°zev z√°kazn√≠ka je povinn√Ω');
                    submitBtn.prop('disabled', false).html('<i class="fas fa-check"></i> Vytvo≈ôit po≈æadavek');
                    return;
                }
                
                // Create customer first
                $.ajax({
                    url: '/api/customersapi',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        name: customerName,
                        companyName: customerName
                    }),
                    success: function(customerResponse) {
                        if (customerResponse.success && customerResponse.data) {
                            // Now handle project creation if needed
                            handleProjectCreation(customerResponse.data.id.toString(), customerResponse.data.name);
                        }
                    },
                    error: function() {
                        toastr.error('Nepoda≈ôilo se vytvo≈ôit z√°kazn√≠ka');
                        submitBtn.prop('disabled', false).html('<i class="fas fa-check"></i> Vytvo≈ôit po≈æadavek');
                    }
                });
            } else {
                // Use existing customer or no customer
                const selectedCustomer = $('#customerId option:selected');
                const clientId = selectedCustomerValue || null;
                const clientName = clientId && selectedCustomerValue !== '' ? selectedCustomer.text().split(' (')[0] : null;
                handleProjectCreation(clientId, clientName);
            }
        }

        function handleProjectCreation(clientId, clientName) {
            const selectedProjectValue = $('#projectId').val();
            
            // If new project is selected, create project first
            if (selectedProjectValue === 'new') {
                const projectName = $('#quickProjectName').val().trim();
                
                if (!projectName) {
                    toastr.error('N√°zev projektu je povinn√Ω');
                    const submitBtn = $('#newRequestForm button[type="submit"]');
                    submitBtn.prop('disabled', false).html('<i class="fas fa-check"></i> Vytvo≈ôit po≈æadavek');
                    return;
                }
                
                // Create project first
                const projectData = {
                    name: projectName,
                    description: `Projekt vytvo≈ôen√Ω z po≈æadavku: ${$('#title').val()}`,
                    customerId: clientId,
                    customerName: clientName,
                    status: 'Draft',
                    priority: 'Medium'
                };
                
                $.ajax({
                    url: '/api/projectsapi',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(projectData),
                    success: function(projectResponse) {
                        if (projectResponse.success && projectResponse.data) {
                            // Now create request with the new project
                            submitRequestWithProjectAndCustomer(projectResponse.data.id, clientId, clientName);
                        }
                    },
                    error: function() {
                        toastr.error('Nepoda≈ôilo se vytvo≈ôit projekt');
                        const submitBtn = $('#newRequestForm button[type="submit"]');
                        submitBtn.prop('disabled', false).html('<i class="fas fa-check"></i> Vytvo≈ôit po≈æadavek');
                    }
                });
            } else {
                // Use existing project or no project
                const projectId = selectedProjectValue || null;
                submitRequestWithProjectAndCustomer(projectId, clientId, clientName);
            }
        }
        
        function submitRequestWithProjectAndCustomer(projectId, clientId, clientName) {
            const formData = {
                requestType: $('#requestType').val(),
                title: $('#title').val(),
                description: $('#description').val(),
                priority: $('#priority').val(),
                projectId: projectId,
                clientId: clientId,
                clientName: clientName
            };
            
            const submitBtn = $('#newRequestForm button[type="submit"]');
            
            $.ajax({
                url: '/api/requestsapi',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(response) {
                    if (response.success && response.data) {
                        // Rovnou p≈ôesmƒõrovat na detail
                        window.location.href = `/Requests/${response.data.id}`;
                    }
                },
                error: function(xhr) {
                    const error = xhr.responseJSON?.message || 'Nepoda≈ôilo se vytvo≈ôit po≈æadavek';
                    toastr.error(error);
                    submitBtn.prop('disabled', false).html('<i class="fas fa-check"></i> Vytvo≈ôit po≈æadavek');
                }
            });
        }
    </script>
}