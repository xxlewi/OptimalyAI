@model OptimalyAI.ViewModels.CustomerDetailViewModel
@using OAI.Core.Entities.Customers
@using static OAI.Core.Entities.Customers.CustomerRequest
@{
    ViewData["Title"] = "Detail zákazníka";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Detail zákazníka</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-action="Index">Zákazníci</a></li>
                    <li class="breadcrumb-item active">@Model.Name</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-8">
                <!-- Základní informace -->
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title"><i class="fas fa-user"></i> Základní údaje</h3>
                        <div class="card-tools">
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning btn-sm">
                                <i class="fas fa-edit"></i> Upravit
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <strong>Jméno/Název:</strong>
                                <p class="text-muted">@Model.Name</p>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.CompanyName))
                            {
                                <div class="col-md-6">
                                    <strong>Společnost:</strong>
                                    <p class="text-muted">@Model.CompanyName</p>
                                </div>
                            }
                        </div>

                        <div class="row">
                            @if (!string.IsNullOrEmpty(Model.ICO))
                            {
                                <div class="col-md-3">
                                    <strong>IČO:</strong>
                                    <p class="text-muted">@Model.ICO</p>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.DIC))
                            {
                                <div class="col-md-3">
                                    <strong>DIČ:</strong>
                                    <p class="text-muted">@Model.DIC</p>
                                </div>
                            }
                            <div class="col-md-3">
                                <strong>Typ:</strong>
                                <p class="text-muted">
                                    <span class="badge badge-@(Model.Type switch {
                                        CustomerType.Individual => "info",
                                        CustomerType.Company => "primary",
                                        CustomerType.Government => "warning",
                                        CustomerType.NonProfit => "success",
                                        _ => "secondary"
                                    })">@GetTypeText(Model.Type)</span>
                                </p>
                            </div>
                            <div class="col-md-3">
                                <strong>Segment:</strong>
                                <p class="text-muted">
                                    <span class="badge badge-@(Model.Segment switch {
                                        CustomerSegment.VIP => "danger",
                                        CustomerSegment.Premium => "warning",
                                        CustomerSegment.Strategic => "purple",
                                        _ => "secondary"
                                    })">@GetSegmentText(Model.Segment)</span>
                                </p>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <strong>Status:</strong>
                                <p class="text-muted">
                                    <span class="badge badge-@(Model.Status switch {
                                        CustomerStatus.Active => "success",
                                        CustomerStatus.Lead => "info",
                                        CustomerStatus.Inactive => "secondary",
                                        CustomerStatus.Suspended => "warning",
                                        CustomerStatus.Blacklisted => "danger",
                                        _ => "secondary"
                                    })">@GetStatusText(Model.Status)</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Kontaktní údaje -->
                <div class="card card-info">
                    <div class="card-header">
                        <h3 class="card-title"><i class="fas fa-phone"></i> Kontaktní údaje</h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @if (!string.IsNullOrEmpty(Model.Email))
                            {
                                <div class="col-md-4">
                                    <strong>Email:</strong>
                                    <p class="text-muted">
                                        <a href="mailto:@Model.Email">@Model.Email</a>
                                    </p>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Phone))
                            {
                                <div class="col-md-4">
                                    <strong>Telefon:</strong>
                                    <p class="text-muted">
                                        <a href="tel:@Model.Phone">@Model.Phone</a>
                                    </p>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Mobile))
                            {
                                <div class="col-md-4">
                                    <strong>Mobil:</strong>
                                    <p class="text-muted">
                                        <a href="tel:@Model.Mobile">@Model.Mobile</a>
                                    </p>
                                </div>
                            }
                        </div>

                        @if (!string.IsNullOrEmpty(Model.ContactPerson))
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <strong>Kontaktní osoba:</strong>
                                    <p class="text-muted">@Model.ContactPerson</p>
                                </div>
                                <div class="col-md-6">
                                    <strong>Preferovaná komunikace:</strong>
                                    <p class="text-muted">@GetCommunicationText(Model.PreferredCommunication)</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Adresy -->
                <div class="card card-warning">
                    <div class="card-header">
                        <h3 class="card-title"><i class="fas fa-map-marker-alt"></i> Adresy</h3>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.BillingAddress))
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <strong>Fakturační adresa:</strong>
                                    <p class="text-muted">@Html.Raw(Model.BillingAddress.Replace("\n", "<br />"))</p>
                                </div>
                                @if (!string.IsNullOrEmpty(Model.DeliveryAddress))
                                {
                                    <div class="col-md-6">
                                        <strong>Dodací adresa:</strong>
                                        <p class="text-muted">@Html.Raw(Model.DeliveryAddress.Replace("\n", "<br />"))</p>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <!-- Poznámky -->
                    <div class="card card-secondary">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fas fa-sticky-note"></i> Poznámky</h3>
                        </div>
                        <div class="card-body">
                            <p>@Model.Notes</p>
                        </div>
                    </div>
                }
            </div>

            <div class="col-md-4">
                <!-- Metriky -->
                <div class="card card-success">
                    <div class="card-header">
                        <h3 class="card-title"><i class="fas fa-chart-bar"></i> Statistiky</h3>
                    </div>
                    <div class="card-body">
                        <div class="info-box mb-3">
                            <span class="info-box-icon bg-info"><i class="fas fa-project-diagram"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Celkem projektů</span>
                                <span class="info-box-number">@Model.ProjectsCount</span>
                            </div>
                        </div>

                        <div class="info-box mb-3">
                            <span class="info-box-icon bg-warning"><i class="fas fa-play"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Aktivní projekty</span>
                                <span class="info-box-number">@Model.ActiveProjectsCount</span>
                            </div>
                        </div>

                        <div class="info-box mb-3">
                            <span class="info-box-icon bg-success"><i class="fas fa-dollar-sign"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Celková hodnota</span>
                                <span class="info-box-number">@Model.TotalProjectsValue.ToString("C0")</span>
                            </div>
                        </div>

                        @if (Model.AverageProjectSuccessRate > 0)
                        {
                            <div class="info-box mb-3">
                                <span class="info-box-icon bg-primary"><i class="fas fa-percentage"></i></span>
                                <div class="info-box-content">
                                    <span class="info-box-text">Úspěšnost</span>
                                    <span class="info-box-number">@Model.AverageProjectSuccessRate.ToString("F1")%</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Obchodní podmínky -->
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title"><i class="fas fa-money-check-alt"></i> Obchodní podmínky</h3>
                    </div>
                    <div class="card-body">
                        @if (Model.CreditLimit.HasValue)
                        {
                            <p><strong>Credit limit:</strong> @Model.CreditLimit.Value.ToString("C0")</p>
                        }
                        <p><strong>Aktuální dluh:</strong> @Model.CurrentDebt.ToString("C0")</p>
                        <p><strong>Splatnost faktur:</strong> @Model.PaymentTermDays dní</p>
                        
                        @if (Model.FirstContactDate.HasValue)
                        {
                            <p><strong>První kontakt:</strong> @Model.FirstContactDate.Value.ToString("dd.MM.yyyy")</p>
                        }
                        @if (Model.LastContactDate.HasValue)
                        {
                            <p><strong>Poslední kontakt:</strong> @Model.LastContactDate.Value.ToString("dd.MM.yyyy")</p>
                        }
                    </div>
                </div>

                <!-- Akce -->
                <div class="card">
                    <div class="card-body">
                        @if (!Model.IsDeleted)
                        {
                            <a asp-controller="Projects" asp-action="Create" asp-route-customerId="@Model.Id" class="btn btn-success btn-block">
                                <i class="fas fa-plus"></i> Nový projekt
                            </a>
                            <a asp-controller="Requests" asp-action="New" asp-route-customerId="@Model.Id" class="btn btn-info btn-block">
                                <i class="fas fa-file-plus"></i> Nový požadavek
                            </a>
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning btn-block">
                                <i class="fas fa-edit"></i> Upravit zákazníka
                            </a>
                            <button id="deleteCustomerBtn" class="btn btn-danger btn-block" data-customer-id="@Model.Id">
                                <i class="fas fa-trash"></i> Archivovat zákazníka
                            </button>
                        }
                        else
                        {
                            <div class="alert alert-warning mb-3">
                                <i class="fas fa-archive"></i> Zákazník byl archivován @Model.DeletedAt?.ToString("dd.MM.yyyy HH:mm")
                            </div>
                            <button id="restoreCustomerBtn" class="btn btn-success btn-block" data-customer-id="@Model.Id">
                                <i class="fas fa-undo"></i> Aktivovat zákazníka
                            </button>
                            <button id="permanentDeleteCustomerBtn" class="btn btn-danger btn-block" data-customer-id="@Model.Id">
                                <i class="fas fa-trash-alt"></i> Trvale smazat
                            </button>
                        }
                        <a asp-action="Index" class="btn btn-default btn-block">
                            <i class="fas fa-arrow-left"></i> Zpět na seznam
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Nedávné projekty -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title"><i class="fas fa-project-diagram"></i> Nedávné projekty</h3>
                        <div class="card-tools">
                            <a asp-controller="Projects" asp-action="Index" asp-route-customerId="@Model.Id" class="btn btn-sm btn-primary">
                                Zobrazit všechny projekty
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (Model.RecentProjects.Any())
                        {
                            <div class="table-responsive p-0">
                                <table class="table table-hover text-nowrap">
                                    <thead>
                                        <tr>
                                            <th>Název</th>
                                            <th>Status</th>
                                            <th>Priorita</th>
                                            <th>Vytvořen</th>
                                            <th>Termín</th>
                                            <th>Akce</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var project in Model.RecentProjects)
                                        {
                                            <tr>
                                                <td>
                                                    <a asp-controller="Projects" asp-action="Details" asp-route-id="@project.Id" class="text-primary">
                                                        @project.Name
                                                    </a>
                                                </td>
                                                <td>
                                                    <span class="badge badge-secondary">@project.Status</span>
                                                </td>
                                                <td>
                                                    <span class="badge badge-secondary">@project.Priority</span>
                                                </td>
                                                <td>@project.CreatedAt.ToString("dd.MM.yyyy")</td>
                                                <td>
                                                    @if (project.LastRun.HasValue)
                                                    {
                                                        @project.LastRun.Value.ToString("dd.MM.yyyy")
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </td>
                                                <td>
                                                    <a asp-controller="Projects" asp-action="Details" asp-route-id="@project.Id" class="btn btn-info btn-sm">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center text-muted py-4">
                                <i class="fas fa-folder-open fa-3x mb-3"></i>
                                <p>Žádné projekty zatím nebyly vytvořeny</p>
                                <a asp-controller="Projects" asp-action="Create" asp-route-customerId="@Model.Id" class="btn btn-success">
                                    <i class="fas fa-plus"></i> Vytvořit první projekt
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        
        <!-- Business požadavky -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title"><i class="fas fa-tasks"></i> Business požadavky</h3>
                        <div class="card-tools">
                            <a href="/Requests?clientId=@Model.Id" class="btn btn-sm btn-primary">
                                Zobrazit všechny požadavky
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (Model.BusinessRequests.Any())
                        {
                            <div class="table-responsive p-0">
                                <table class="table table-hover text-nowrap">
                                    <thead>
                                        <tr>
                                            <th>Číslo</th>
                                            <th>Název</th>
                                            <th>Typ</th>
                                            <th>Status</th>
                                            <th>Priorita</th>
                                            <th>Vytvořeno</th>
                                            <th>Termín</th>
                                            <th>Akce</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var request in Model.BusinessRequests)
                                        {
                                            <tr>
                                                <td>
                                                    <a href="/Requests/@request.Id" class="text-primary">
                                                        @request.RequestNumber
                                                    </a>
                                                </td>
                                                <td>@request.Title</td>
                                                <td>
                                                    <span class="badge badge-info">@(request.RequestType ?? "Obecný")</span>
                                                </td>
                                                <td>
                                                    <span class="badge badge-@(request.Status switch {
                                                        OAI.Core.Entities.Business.RequestStatus.New => "info",
                                                        OAI.Core.Entities.Business.RequestStatus.InProgress => "primary",
                                                        OAI.Core.Entities.Business.RequestStatus.OnHold => "warning",
                                                        OAI.Core.Entities.Business.RequestStatus.Completed => "success",
                                                        _ => "secondary"
                                                    })">@(request.Status switch {
                                                        OAI.Core.Entities.Business.RequestStatus.New => "Nový",
                                                        OAI.Core.Entities.Business.RequestStatus.InProgress => "V procesu",
                                                        OAI.Core.Entities.Business.RequestStatus.OnHold => "Odloženo",
                                                        OAI.Core.Entities.Business.RequestStatus.Completed => "Ukončeno",
                                                        _ => request.Status.ToString()
                                                    })</span>
                                                </td>
                                                <td>
                                                    <span class="badge badge-@(request.Priority switch {
                                                        OAI.Core.Entities.Business.RequestPriority.Low => "secondary",
                                                        OAI.Core.Entities.Business.RequestPriority.Normal => "info",
                                                        OAI.Core.Entities.Business.RequestPriority.High => "warning",
                                                        OAI.Core.Entities.Business.RequestPriority.Urgent => "danger",
                                                        _ => "secondary"
                                                    })">@(request.Priority switch {
                                                        OAI.Core.Entities.Business.RequestPriority.Low => "Nízká",
                                                        OAI.Core.Entities.Business.RequestPriority.Normal => "Normální",
                                                        OAI.Core.Entities.Business.RequestPriority.High => "Vysoká",
                                                        OAI.Core.Entities.Business.RequestPriority.Urgent => "Urgentní",
                                                        _ => request.Priority.ToString()
                                                    })</span>
                                                </td>
                                                <td>@request.CreatedAt.ToString("dd.MM.yyyy")</td>
                                                <td>
                                                    @if (request.Deadline.HasValue)
                                                    {
                                                        @request.Deadline.Value.ToString("dd.MM.yyyy")
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </td>
                                                <td>
                                                    <a href="/Requests/@request.Id" class="btn btn-info btn-sm">
                                                        <i class="fas fa-eye"></i> Detail
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center text-muted py-4">
                                <i class="fas fa-clipboard-list fa-3x mb-3"></i>
                                <p>Žádné business požadavky zatím nebyly vytvořeny</p>
                                <a href="/Requests/New?customerId=@Model.Id" class="btn btn-primary">
                                    <i class="fas fa-plus"></i> Vytvořit první požadavek
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@functions {
    string GetTypeText(CustomerType type) => type switch
    {
        CustomerType.Individual => "Fyzická osoba",
        CustomerType.Company => "Firma",
        CustomerType.Government => "Státní správa",
        CustomerType.NonProfit => "Neziskovka",
        _ => "Neznámý"
    };

    string GetSegmentText(CustomerSegment segment) => segment switch
    {
        CustomerSegment.Small => "Malý",
        CustomerSegment.Standard => "Standardní",
        CustomerSegment.Premium => "Prémiový",
        CustomerSegment.VIP => "VIP",
        CustomerSegment.Strategic => "Strategický",
        _ => "Neznámý"
    };

    string GetStatusText(CustomerStatus status) => status switch
    {
        CustomerStatus.Lead => "Potenciální",
        CustomerStatus.Active => "Aktivní",
        CustomerStatus.Inactive => "Neaktivní",
        CustomerStatus.Suspended => "Pozastavený",
        CustomerStatus.Blacklisted => "Blacklist",
        _ => "Neznámý"
    };

    string GetCommunicationText(CommunicationPreference pref) => pref switch
    {
        CommunicationPreference.Email => "Email",
        CommunicationPreference.Phone => "Telefon",
        CommunicationPreference.SMS => "SMS",
        CommunicationPreference.InPerson => "Osobně",
        CommunicationPreference.NoPreference => "Bez preference",
        _ => "Neznámé"
    };
}

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#deleteCustomerBtn').click(function() {
                var customerId = $(this).data('customer-id');
                
                Swal.fire({
                    title: 'Smazat zákazníka?',
                    text: 'Tato akce je nevratná. Zákazník bude archivován.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Ano, smazat!',
                    cancelButtonText: 'Zrušit'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("Delete", "Customers")/' + customerId,
                            type: 'POST',
                            headers: {
                                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                            },
                            success: function(response) {
                                if (response.success) {
                                    Swal.fire(
                                        'Smazáno!',
                                        response.message,
                                        'success'
                                    ).then(() => {
                                        window.location.href = '@Url.Action("Index", "Customers")';
                                    });
                                } else {
                                    Swal.fire(
                                        'Chyba!',
                                        response.message,
                                        'error'
                                    );
                                }
                            },
                            error: function() {
                                Swal.fire(
                                    'Chyba!',
                                    'Nastala chyba při mazání zákazníka.',
                                    'error'
                                );
                            }
                        });
                    }
                });
            });
        });

        // Obnovení zákazníka
        $('#restoreCustomerBtn').click(function() {
            var customerId = $(this).data('customer-id');
            
            Swal.fire({
                title: 'Aktivovat zákazníka?',
                text: 'Zákazník bude obnoven ze stavu archivován.',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Ano, aktivovat!',
                cancelButtonText: 'Zrušit'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("Restore", "Customers")/' + customerId,
                        type: 'POST',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                Swal.fire(
                                    'Aktivován!',
                                    response.message,
                                    'success'
                                ).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Chyba!',
                                    response.message,
                                    'error'
                                );
                            }
                        },
                        error: function() {
                            Swal.fire(
                                'Chyba!',
                                'Nastala chyba při aktivaci zákazníka.',
                                'error'
                            );
                        }
                    });
                }
            });
        });

        // Trvalé smazání zákazníka
        $('#permanentDeleteCustomerBtn').click(function() {
            var customerId = $(this).data('customer-id');
            
            Swal.fire({
                title: 'Trvale smazat zákazníka?',
                text: 'POZOR! Tato akce je NEVRATNÁ. Zákazník bude trvale odstraněn ze systému.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Ano, trvale smazat!',
                cancelButtonText: 'Zrušit',
                input: 'text',
                inputPlaceholder: 'Napište SMAZAT pro potvrzení',
                inputValidator: (value) => {
                    if (value !== 'SMAZAT') {
                        return 'Musíte napsat SMAZAT pro potvrzení!'
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("PermanentDelete", "Customers")/' + customerId,
                        type: 'POST',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                Swal.fire(
                                    'Smazáno!',
                                    response.message,
                                    'success'
                                ).then(() => {
                                    window.location.href = '@Url.Action("Index", "Customers")';
                                });
                            } else {
                                Swal.fire(
                                    'Chyba!',
                                    response.message,
                                    'error'
                                );
                            }
                        },
                        error: function() {
                            Swal.fire(
                                'Chyba!',
                                'Nastala chyba při mazání zákazníka.',
                                'error'
                            );
                        }
                    });
                }
            });
        });

        // Konverze požadavku na projekt
        $('.convert-to-project').click(function() {
            var requestId = $(this).data('request-id');
            var requestTitle = $(this).data('request-title');
            
            Swal.fire({
                title: 'Konvertovat požadavek na projekt?',
                text: `Požadavek "${requestTitle}" bude konvertován na nový projekt.`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Ano, konvertovat!',
                cancelButtonText: 'Zrušit'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/api/customer-requests/' + requestId + '/convert-to-project',
                        type: 'POST',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Úspěch!',
                                    text: response.message,
                                    icon: 'success',
                                    showCancelButton: true,
                                    confirmButtonText: 'Zobrazit projekt',
                                    cancelButtonText: 'Zavřít'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.href = '/Projects/Details/' + response.data.id;
                                    } else {
                                        location.reload();
                                    }
                                });
                            } else {
                                Swal.fire(
                                    'Chyba!',
                                    response.message || 'Nastala chyba při konverzi požadavku.',
                                    'error'
                                );
                            }
                        },
                        error: function(xhr) {
                            var errorMessage = 'Nastala chyba při konverzi požadavku.';
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                            }
                            Swal.fire(
                                'Chyba!',
                                errorMessage,
                                'error'
                            );
                        }
                    });
                }
            });
        });
    </script>
}