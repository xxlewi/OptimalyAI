@model IEnumerable<OAI.Core.DTOs.Customers.CustomerListDto>
@using OAI.Core.Entities.Customers
@{
    ViewData["Title"] = "Seznam zákazníků";
    var customers = Model.ToList();
    var totalCount = customers.Count;
    var activeCount = customers.Count(c => c.Status == CustomerStatus.Active && !c.IsDeleted);
    var archivedCount = customers.Count(c => c.IsDeleted);
    var totalProjectsValue = customers.Sum(c => c.TotalProjectsValue);
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>
                    <i class="fas fa-users"></i> Zákazníci
                    <small class="text-muted">CRM systém</small>
                </h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item active">Zákazníci</li>
                </ol>
            </div>
        </div>
    </div>
</section>

<section class="content">
    <div class="container-fluid">
        <!-- Stats Row -->
        <div class="row mb-3">
            <div class="col-lg-3 col-6">
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3>@totalCount</h3>
                        <p>Celkem zákazníků</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-users"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3>@activeCount</h3>
                        <p>Aktivní zákazníci</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3>@customers.Sum(c => c.ActiveProjectsCount)</h3>
                        <p>Aktivní projekty</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-project-diagram"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-primary">
                    <div class="inner">
                        <h3>@totalProjectsValue.ToString("C0")</h3>
                        <p>Celková hodnota</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-dollar-sign"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Search and Filter Section -->
        <div class="row mb-3">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-4">
                        <div class="input-group">
                            <input type="text" class="form-control" id="searchCustomers" 
                                   placeholder="Vyhledat zákazníka..." autocomplete="off">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary" onclick="filterCustomers()">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select id="statusFilter" class="form-control" onchange="filterCustomers()">
                            <option value="all">Všichni zákazníci</option>
                            <option value="active">Pouze aktivní</option>
                            <option value="archived">Pouze archivovaní</option>
                        </select>
                    </div>
                    <div class="col-md-5">
                        <button type="button" class="btn btn-default" onclick="clearFilters()">
                            <i class="fas fa-times"></i> Vymazat filtry
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Customers Table -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Seznam zákazníků</h3>
                <div class="card-tools">
                    <a href="@Url.Action("Create")" class="btn btn-primary btn-sm">
                        <i class="fas fa-plus"></i> Nový zákazník
                    </a>
                </div>
            </div>
            <div class="card-body">
                @if (customers.Any())
                {
                    <table class="table table-bordered table-striped table-hover" id="customersTable">
                        <thead>
                            <tr>
                                <th>Zákazník</th>
                                <th>Kontakt</th>
                                <th>Segment</th>
                                <th>Projekty</th>
                                <th>Hodnota</th>
                                <th style="width: 200px">Akce</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var customer in customers)
                            {
                                <tr data-status="@(customer.IsDeleted ? "Archived" : "Active")" data-name="@customer.Name.ToLower()" data-company="@customer.CompanyName?.ToLower()">
                                    <td>
                                        <div>
                                            <strong>
                                                <a href="@Url.Action("Details", new { id = customer.Id })" class="text-dark">
                                                    @customer.Name
                                                </a>
                                            </strong>
                                            @if (customer.Status == CustomerStatus.Active && !customer.IsDeleted)
                                            {
                                                <span class="badge badge-success float-right">Aktivní</span>
                                            }
                                            else if (customer.Status == CustomerStatus.Lead)
                                            {
                                                <span class="badge badge-info float-right">Potenciální</span>
                                            }
                                            else if (customer.IsDeleted)
                                            {
                                                <span class="badge badge-secondary float-right">Archivovaný</span>
                                            }
                                            <br>
                                            <small class="text-muted">
                                                @if (!string.IsNullOrEmpty(customer.CompanyName))
                                                {
                                                    @customer.CompanyName
                                                }
                                                else
                                                {
                                                    <text>@GetTypeText(customer.Type)</text>
                                                }
                                            </small>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <i class="fas fa-envelope text-muted"></i> 
                                            @if (!string.IsNullOrEmpty(customer.Email))
                                            {
                                                <a href="mailto:@customer.Email" class="text-muted">@customer.Email</a>
                                            }
                                            else
                                            {
                                                <span class="text-muted">-</span>
                                            }
                                            <br>
                                            <small>
                                                <i class="fas fa-phone text-muted"></i> 
                                                @if (!string.IsNullOrEmpty(customer.Phone))
                                                {
                                                    @customer.Phone
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </small>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <span class="badge badge-@(customer.Segment switch {
                                                CustomerSegment.VIP => "danger",
                                                CustomerSegment.Premium => "warning",
                                                CustomerSegment.Strategic => "purple",
                                                _ => "secondary"
                                            })">
                                                <i class="fas fa-crown"></i> @GetSegmentText(customer.Segment)
                                            </span>
                                            <br>
                                            <small>
                                                <span class="text-muted">Od @customer.CreatedAt.ToString("MM/yyyy")</span>
                                            </small>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <span class="badge badge-info">
                                                <i class="fas fa-layer-group"></i> @customer.ProjectsCount projektů
                                            </span>
                                            <br>
                                            <small>
                                                <span class="text-success">@customer.ActiveProjectsCount aktivních</span>
                                            </small>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <div class="text-center">
                                            <strong>@customer.TotalProjectsValue.ToString("C0")</strong>
                                            @if (customer.ProjectsCount > 0)
                                            {
                                                <div class="progress progress-xs">
                                                    <div class="progress-bar bg-success" style="width: 100%"></div>
                                                </div>
                                                <small class="text-muted">@customer.ActiveProjectsCount aktivních</small>
                                            }
                                        </div>
                                    </td>
                                    <td class="text-center align-middle">
                                        <a asp-controller="Projects" asp-action="Create" asp-route-customerId="@customer.Id" 
                                           class="btn btn-success btn-sm" title="Nový projekt">
                                            <i class="fas fa-plus"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@customer.Id" 
                                           class="btn btn-primary btn-sm ml-1" title="Upravit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Details" asp-route-id="@customer.Id" 
                                           class="btn btn-info btn-sm ml-1" title="Detail">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        @if (!customer.IsDeleted)
                                        {
                                            <button type="button" class="btn btn-warning btn-sm ml-1" 
                                                    onclick="archiveCustomer('@customer.Id', '@customer.Name')" title="Archivovat">
                                                <i class="fas fa-archive"></i>
                                            </button>
                                        }
                                        <button type="button" class="btn btn-danger btn-sm ml-1" 
                                                onclick="deleteCustomer('@customer.Id', '@customer.Name')" title="Smazat">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">Žádní zákazníci</h4>
                        <p class="text-muted">Zatím nemáte vytvořené žádné zákazníky.</p>
                        <a href="@Url.Action("Create")" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Vytvořit prvního zákazníka
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        function archiveCustomer(customerId, customerName) {
            $.ajax({
                url: '@Url.Action("Delete", "Customers")/' + customerId,
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        toastr.success(`Zákazník "${customerName}" byl úspěšně archivován.`);
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        toastr.error(response.message || 'Nepodařilo se archivovat zákazníka');
                    }
                },
                error: function(xhr) {
                    const errorMessage = xhr.responseJSON?.message || xhr.responseText || 'Nastala chyba při archivaci zákazníka';
                    toastr.error(errorMessage);
                }
            });
        }
        
        function deleteCustomer(customerId, customerName) {
            // Directly delete the customer without confirmation
            deleteCustomerPermanently(customerId, customerName);
        }
        
        function deleteCustomerPermanently(customerId, customerName) {
            $.ajax({
                url: '@Url.Action("PermanentDelete", "Customers")/' + customerId,
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        toastr.success(`Zákazník "${customerName}" byl trvale smazán.`);
                        // Remove the row with animation
                        const customerRow = $(`button[onclick="deleteCustomer('${customerId}', '${customerName}')"]`).closest('tr');
                        customerRow.fadeOut(400, function() {
                            customerRow.remove();
                            // Update filter count if exists
                            if ($('#filterInfo').length > 0) {
                                filterCustomers();
                            }
                        });
                    } else {
                        toastr.error(response.message || 'Nepodařilo se smazat zákazníka');
                    }
                },
                error: function(xhr) {
                    const errorMessage = xhr.responseJSON?.message || xhr.responseText || 'Nastala chyba při mazání zákazníka';
                    toastr.error(errorMessage);
                }
            });
        }
        
        function filterCustomers() {
            const searchTerm = $('#searchCustomers').val().toLowerCase();
            const statusFilter = $('#statusFilter').val();
            
            $('#customersTable tbody tr').each(function() {
                const row = $(this);
                const status = row.attr('data-status');
                const name = row.attr('data-name') || '';
                const company = row.attr('data-company') || '';
                const email = row.find('td:eq(1) a[href^="mailto:"]').text().toLowerCase();
                
                // Status filter
                let statusMatch = true;
                if (statusFilter === 'active') {
                    statusMatch = status === 'Active';
                } else if (statusFilter === 'archived') {
                    statusMatch = status === 'Archived';
                }
                
                // Search filter
                const searchMatch = !searchTerm || 
                    name.includes(searchTerm) || 
                    company.includes(searchTerm) ||
                    email.includes(searchTerm);
                
                if (statusMatch && searchMatch) {
                    row.show();
                } else {
                    row.hide();
                }
            });
            
            // Zobrazit počet filtrovaných zákazníků
            const visibleCount = $('#customersTable tbody tr:visible').length;
            const totalCount = $('#customersTable tbody tr').length;
            
            if (visibleCount < totalCount) {
                if ($('#filterInfo').length === 0) {
                    $('.card-header').append(`<span id="filterInfo" class="float-right text-muted"></span>`);
                }
                $('#filterInfo').text(`Zobrazeno ${visibleCount} z ${totalCount} zákazníků`);
            } else {
                $('#filterInfo').remove();
            }
        }
        
        function clearFilters() {
            $('#searchCustomers').val('');
            $('#statusFilter').val('all');
            filterCustomers();
        }
        
        // Real-time search při psaní
        $('#searchCustomers').on('keyup', function() {
            filterCustomers();
        });
        
        $(document).ready(function() {
            // Aplikovat výchozí filtr při načtení stránky
            filterCustomers();
        });
    </script>
}

@functions {
    string GetTypeText(CustomerType type) => type switch
    {
        CustomerType.Individual => "Fyzická osoba",
        CustomerType.Company => "Firma",
        CustomerType.Government => "Státní správa",
        CustomerType.NonProfit => "Neziskovka",
        _ => "Neznámý"
    };

    string GetSegmentText(CustomerSegment segment) => segment switch
    {
        CustomerSegment.Small => "Malý",
        CustomerSegment.Standard => "Standardní",
        CustomerSegment.Premium => "Prémiový",
        CustomerSegment.VIP => "VIP",
        CustomerSegment.Strategic => "Strategický",
        _ => "Neznámý"
    };

    string GetStatusText(CustomerStatus status) => status switch
    {
        CustomerStatus.Lead => "Potenciální",
        CustomerStatus.Active => "Aktivní",
        CustomerStatus.Inactive => "Neaktivní",
        CustomerStatus.Suspended => "Pozastavený",
        CustomerStatus.Blacklisted => "Blacklist",
        _ => "Neznámý"
    };
}