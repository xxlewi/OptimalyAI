@model OAI.Core.DTOs.Projects.ProjectWorkflowDesignDto
@{
    ViewData["Title"] = $"Detail šablony: {ViewBag.Template.Name}";
    var template = ViewBag.Template as OAI.Core.DTOs.Projects.ProjectDto;
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">@template.Name</h3>
                <div class="card-tools">
                    <a href="/ProjectWorkflows/CreateFromTemplate?templateId=@template.Id" class="btn btn-success btn-sm">
                        <i class="fas fa-plus"></i> Použít šablonu
                    </a>
                    <a href="/WorkflowDesigner?projectId=@template.Id" class="btn btn-primary btn-sm">
                        <i class="fas fa-edit"></i> Upravit
                    </a>
                    <button type="button" class="btn btn-info btn-sm" onclick="exportTemplate()">
                        <i class="fas fa-download"></i> Exportovat
                    </button>
                    <a href="/ProjectWorkflows/Templates" class="btn btn-default btn-sm">
                        <i class="fas fa-arrow-left"></i> Zpět na šablony
                    </a>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        <h5>Popis šablony</h5>
                        <p>@template.Description</p>
                        
                        <h5 class="mt-4">Workflow stages</h5>
                        @if (Model.Stages != null && Model.Stages.Any())
                        {
                            <div class="timeline">
                                @foreach (var stage in Model.Stages.OrderBy(s => s.Order))
                                {
                                    <div>
                                        <i class="fas fa-circle bg-@(stage.Type switch {
                                            StageType.Input => "primary",
                                            StageType.Processing => "info",
                                            StageType.Validation => "warning",
                                            StageType.Output => "success",
                                            _ => "secondary"
                                        })"></i>
                                        <div class="timeline-item">
                                            <span class="time">
                                                <i class="fas fa-layer-group"></i> Krok @stage.Order
                                            </span>
                                            <h3 class="timeline-header">
                                                @stage.Name
                                                <span class="badge badge-secondary">@stage.Type</span>
                                            </h3>
                                            <div class="timeline-body">
                                                @stage.Description
                                                <div class="mt-2">
                                                    <strong>Orchestrátor:</strong> @stage.OrchestratorType<br/>
                                                    <strong>Strategie:</strong> @stage.ExecutionStrategy<br/>
                                                    <strong>Error handling:</strong> @stage.ErrorHandling
                                                </div>
                                                @if (stage.Tools != null && stage.Tools.Any())
                                                {
                                                    <div class="mt-2">
                                                        <strong>Tools:</strong>
                                                        @foreach (var tool in stage.Tools.OrderBy(t => t.Order))
                                                        {
                                                            <span class="badge badge-info">@tool.ToolId</span>
                                                        }
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(stage.ReActAgentType))
                                                {
                                                    <div class="mt-2">
                                                        <strong>ReAct Agent:</strong> <span class="badge badge-warning">@stage.ReActAgentType</span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i> Tato šablona zatím nemá definované žádné workflow stages.
                            </div>
                        }
                    </div>
                    
                    <div class="col-md-4">
                        <div class="info-box">
                            <span class="info-box-icon bg-info"><i class="fas fa-code-branch"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Verze workflow</span>
                                <span class="info-box-number">@template.WorkflowVersion</span>
                            </div>
                        </div>
                        
                        <div class="info-box">
                            <span class="info-box-icon bg-success"><i class="fas fa-layer-group"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Počet stages</span>
                                <span class="info-box-number">@(Model.Stages?.Count() ?? 0)</span>
                            </div>
                        </div>
                        
                        <div class="info-box">
                            <span class="info-box-icon bg-warning"><i class="fas fa-tools"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Použité tools</span>
                                <span class="info-box-number">
                                    @(Model.Stages?.SelectMany(s => s.Tools ?? new List<OAI.Core.DTOs.Projects.ProjectStageToolDto>()).Count() ?? 0)
                                </span>
                            </div>
                        </div>
                        
                        <div class="info-box">
                            <span class="info-box-icon bg-primary"><i class="fas fa-calendar"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Vytvořeno</span>
                                <span class="info-box-number">@template.CreatedAt.ToString("dd.MM.yyyy")</span>
                            </div>
                        </div>
                        
                        <div class="info-box">
                            <span class="info-box-icon bg-secondary"><i class="fas fa-sync-alt"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Naposledy upraveno</span>
                                <span class="info-box-number">@(template.UpdatedAt?.ToString("dd.MM.yyyy") ?? "Nikdy")</span>
                            </div>
                        </div>
                        
                        <!-- Template usage statistics -->
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title">Použití šablony</h5>
                            </div>
                            <div class="card-body">
                                <p class="text-muted">Tato šablona byla použita pro vytvoření:</p>
                                <ul id="templateUsageList">
                                    <li class="text-muted">Načítání...</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            loadTemplateUsage();
        });
        
        function loadTemplateUsage() {
            const templateId = '@template.Id';
            
            fetch('/api/projects')
                .then(response => response.json())
                .then(result => {
                    if (result.isSuccess) {
                        const usageList = $('#templateUsageList');
                        usageList.empty();
                        
                        const projects = result.data.filter(p => p.templateId === templateId && !p.isTemplate);
                        
                        if (projects.length > 0) {
                            projects.forEach(project => {
                                usageList.append(`<li><a href="/Projects/Details/${project.id}">${project.name}</a></li>`);
                            });
                        } else {
                            usageList.append('<li class="text-muted">Zatím nebyla použita</li>');
                        }
                    }
                })
                .catch(error => console.error('Error loading template usage:', error));
        }
        
        function exportTemplate() {
            const templateId = '@template.Id';
            
            fetch(`/api/workflow/${templateId}/design`)
                .then(response => response.json())
                .then(result => {
                    if (result.isSuccess) {
                        const exportData = {
                            template: {
                                name: '@template.Name',
                                description: '@template.Description',
                                version: @template.WorkflowVersion
                            },
                            workflow: result.data
                        };
                        
                        const dataStr = JSON.stringify(exportData, null, 2);
                        const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);
                        
                        const exportFileDefaultName = '@(template.Name.Replace(" ", "_"))_template.json';
                        
                        const linkElement = document.createElement('a');
                        linkElement.setAttribute('href', dataUri);
                        linkElement.setAttribute('download', exportFileDefaultName);
                        linkElement.click();
                        
                        toastr.success('Šablona byla exportována');
                    }
                })
                .catch(error => {
                    toastr.error('Chyba při exportu šablony');
                    console.error('Error:', error);
                });
        }
    </script>
}