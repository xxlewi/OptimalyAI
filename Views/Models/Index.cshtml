@model OptimalyAI.ViewModels.ModelsIndexViewModel
@{
    ViewData["Title"] = "AI Modely";
}
<style>
.action-btn-group .btn {
  margin-right: 5px !important;
}
.action-btn-group .btn:last-child {
  margin-right: 0 !important;
}

/* DataTable filter styling */
#modelsTable thead select {
    width: 100%;
    padding: 2px 5px;
    font-size: 0.875rem;
    margin-top: 5px;
}

#modelsTable thead th {
    vertical-align: top;
    white-space: nowrap;
}

/* Improve header layout with filters */
.dataTables_wrapper .dataTables_filter {
    margin-bottom: 10px;
}

/* Badge styling in selects */
#modelsTable_wrapper select option {
    padding: 3px;
}

/* Responsive table improvements */
@@media (max-width: 768px) {
    #modelsTable thead select {
        font-size: 0.75rem;
        padding: 1px 3px;
    }
}
</style>

<!-- Content Header -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1><i class="fas fa-robot"></i> AI Modely</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Dashboard</a></li>
                    <li class="breadcrumb-item active">AI Modely</li>
                </ol>
            </div>
        </div>
    </div>
</section>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-warning alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <h5><i class="icon fas fa-exclamation-triangle"></i> Upozornění!</h5>
                @Model.ErrorMessage
            </div>
        }

        <!-- Stats Row -->
        <div class="row">
            <div class="col-lg-3 col-6">
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3>@Model.TotalModels</h3>
                        <p>Celkem modelů</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-robot"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3>@Model.ActiveServers/@Model.TotalServers</h3>
                        <p>Aktivní servery</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-server"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3>@Model.TotalSize</h3>
                        <p>Celková velikost</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-hdd"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-primary">
                    <div class="inner">
                        <h3 id="loadedModelsCount">@(ViewBag.LoadedModelsCount ?? 0)</h3>
                        <p>Načtené modely</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-microchip"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Server Status -->
        <div class="card card-outline card-primary">
            <div class="card-header">
                <h3 class="card-title"><i class="fas fa-server"></i> Stav serverů</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-sm btn-success" onclick="syncAllModels()">
                        <i class="fas fa-sync"></i> Synchronizovat modely
                    </button>
                    <button type="button" class="btn btn-sm btn-primary" onclick="location.href='@Url.Action("Index", "AiServers")'">
                        <i class="fas fa-cog"></i> Spravovat servery
                    </button>
                </div>
            </div>
            <div class="card-body p-0">
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th>Server</th>
                            <th>Typ</th>
                            <th>URL</th>
                            <th>Stav</th>
                            <th>Počet modelů</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var server in Model.Servers)
                        {
                            <tr>
                                <td>@server.Name</td>
                                <td><span class="badge badge-info">@server.ServerType</span></td>
                                <td><small>@server.BaseUrl</small></td>
                                <td>
                                    @if (server.IsHealthy)
                                    {
                                        <span class="badge badge-success">Online</span>
                                    }
                                    else if (server.IsActive)
                                    {
                                        <span class="badge badge-danger">Offline</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-secondary">Neaktivní</span>
                                    }
                                </td>
                                <td>@server.ModelCount</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Models List -->
        <div class="card card-outline card-secondary mt-3">
            <div class="card-header">
                <h3 class="card-title"><i class="fas fa-robot"></i> Seznam modelů</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-sm btn-info" id="resetFilters" style="display:none;">
                        <i class="fas fa-times"></i> Resetovat filtry
                    </button>
                    <button type="button" class="btn btn-sm btn-success" data-toggle="modal" data-target="#downloadModal">
                        <i class="fas fa-download"></i> Stáhnout nový model
                    </button>
                </div>
            </div>
            <div class="card-body p-0">
                @if (Model.Models.Any())
                {
                    <table id="modelsTable" class="table table-bordered table-striped table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Model</th>
                                <th style="min-width: 120px">Server</th>
                                <th>Velikost</th>
                                <th style="min-width: 100px">Parametry</th>
                                <th style="min-width: 100px">Kvantizace</th>
                                <th>Upraveno</th>
                                <th style="min-width: 100px">Stav</th>
                                <th style="width: 150px">Akce</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var modelItem in Model.Models)
                            {
                                <tr>
                                    <td>
                                        <strong>@modelItem.DisplayName</strong>
                                        @if (modelItem.IsDefault)
                                        {
                                            <span class="badge badge-warning">Výchozí</span>
                                        }
                                        <br>
                                        <small class="text-muted">@modelItem.Name</small>
                                    </td>
                                    <td>
                                        <span class="badge badge-info">@modelItem.ServerName</span>
                                        <br>
                                        <small class="text-muted">@modelItem.ServerType</small>
                                    </td>
                                    <td>@modelItem.Size</td>
                                    <td>@modelItem.ParameterSize</td>
                                    <td>@modelItem.QuantizationLevel</td>
                                    <td>
                                        <small>@modelItem.ModifiedAt.ToString("dd.MM.yyyy HH:mm")</small>
                                    </td>
                                    <td>
                                        @if (modelItem.IsLoaded)
                                        {
                                            <span class="badge badge-success">Načtený</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-secondary">Nenačtený</span>
                                        }
                                    </td>
                                    <td>
<div class="btn-group btn-group-sm action-btn-group">
                                            <button type="button" class="btn btn-primary" onclick="testModel('@modelItem.Name', '@modelItem.ServerName')" title="Test">
                                                <i class="fas fa-play"></i>
                                            </button>
                                            @if (modelItem.IsLoaded)
                                            {
                                                <button type="button" class="btn btn-warning" onclick="unloadModel('@modelItem.Name', '@modelItem.ServerName')" title="Uvolnit">
                                                    <i class="fas fa-stop"></i>
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-success" onclick="loadModel('@modelItem.Name', '@modelItem.ServerName')" title="Načíst">
                                                    <i class="fas fa-play-circle"></i>
                                                </button>
                                            }
                                            <button type="button" class="btn btn-danger" onclick="deleteModel('@modelItem.Name', '@modelItem.ServerName')" title="Smazat">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="alert alert-info m-3">
                        <i class="fas fa-info-circle"></i> Žádné modely nebyly nalezeny.
                    </div>
                }
            </div>
        </div>
    </div>
</section>

<!-- Download Modal -->
<div class="modal fade" id="downloadModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Stáhnout nový model</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="downloadForm">
                    <div class="form-group">
                        <label>Server</label>
                        <select class="form-control" id="downloadServer" required>
                            @foreach (var server in Model.Servers.Where(s => s.IsActive && s.ServerType == "Ollama"))
                            {
                                <option value="@server.Name">@server.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Název modelu</label>
                        <input type="text" class="form-control" id="downloadModelName" placeholder="např. llama3.2:3b, phi3.5, gemma2:2b" required>
                        <small class="text-muted">
                            Prohlédněte dostupné modely na <a href="https://ollama.com/library" target="_blank">ollama.com/library</a>
                        </small>
                    </div>
                </form>
                <div id="downloadProgress" style="display:none;">
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%"></div>
                    </div>
                    <small class="text-muted" id="downloadStatus">Stahuji...</small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Zrušit</button>
                <button type="button" class="btn btn-success" onclick="downloadModel()">
                    <i class="fas fa-download"></i> Stáhnout
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Test Modal -->
<div class="modal fade" id="testModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Test modelu: <span id="testModelName"></span></h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="testForm">
                    <div class="form-group">
                        <label>Prompt:</label>
                        <textarea class="form-control" id="testPrompt" rows="3">Ahoj! Můžeš se mi představit a říct mi, co umíš?</textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-paper-plane"></i> Odeslat
                    </button>
                </form>
                
                <div id="testResult" class="mt-3" style="display:none;">
                    <hr />
                    <h6>Odpověď:</h6>
                    <div class="card">
                        <div class="card-body">
                            <p id="responseText"></p>
                            <small class="text-muted">
                                Čas odpovědi: <span id="responseTime"></span> ms | 
                                Tokeny/s: <span id="tokensPerSecond"></span>
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
}

@section Scripts {
    <script src="/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    
    <script>
        let currentModel = '';
        let currentServer = '';
        
        $(document).ready(function() {
            // Initialize DataTable with advanced features
            var table = $('#modelsTable').DataTable({
                "responsive": true,
                "lengthChange": true,
                "autoWidth": false,
                "language": {
                    "decimal": "",
                    "emptyTable": "Žádná data k dispozici",
                    "info": "Zobrazeno _START_ až _END_ z celkem _TOTAL_ záznamů",
                    "infoEmpty": "Zobrazeno 0 až 0 z 0 záznamů",
                    "infoFiltered": "(filtrováno z celkem _MAX_ záznamů)",
                    "infoPostFix": "",
                    "thousands": " ",
                    "lengthMenu": "Zobraz _MENU_ záznamů",
                    "loadingRecords": "Načítám...",
                    "processing": "Provádím...",
                    "search": "Hledat:",
                    "zeroRecords": "Žádné záznamy nebyly nalezeny",
                    "paginate": {
                        "first": "První",
                        "last": "Poslední",
                        "next": "Další",
                        "previous": "Předchozí"
                    },
                    "aria": {
                        "sortAscending": ": aktivujte pro řazení sloupce vzestupně",
                        "sortDescending": ": aktivujte pro řazení sloupce sestupně"
                    }
                },
                "pageLength": 25,
                "order": [[0, "asc"]],
                "initComplete": function () {
                    // Add column filters
                    this.api().columns([1, 3, 4, 6]).every(function () {
                        var column = this;
                        var columnHeader = $(column.header());
                        var headerText = columnHeader.text();
                        
                        // Create new header structure with title and filter
                        columnHeader.html('<div>' + headerText + '</div>');
                        
                        var select = $('<select class="form-control form-control-sm"><option value="">Vše</option></select>')
                            .appendTo(columnHeader)
                            .on('click', function (e) {
                                e.stopPropagation(); // Prevent sorting when clicking on select
                            })
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );
                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });
                        
                        // Add options to select
                        if (column.index() === 1) { // Server column
                            column.data().unique().sort().each(function (d, j) {
                                var serverName = $(d).find('.badge').text();
                                if (serverName && select.find('option[value="' + serverName + '"]').length === 0) {
                                    select.append('<option value="' + serverName + '">' + serverName + '</option>');
                                }
                            });
                        } else if (column.index() === 6) { // Status column
                            select.append('<option value="Načtený">Načtený</option>');
                            select.append('<option value="Nenačtený">Nenačtený</option>');
                        } else {
                            column.data().unique().sort().each(function (d, j) {
                                if (d) {
                                    select.append('<option value="' + d + '">' + d + '</option>');
                                }
                            });
                        }
                    });
                },
                "columnDefs": [
                    { "orderable": false, "targets": 7 }, // Disable sorting for Actions column
                    { 
                        "type": "file-size", 
                        "targets": 2 // Size column for proper sorting
                    }
                ]
            });
            
            // Custom sorting for file sizes
            $.fn.dataTable.ext.type.order['file-size-pre'] = function (data) {
                var matches = data.match(/^(\d+(?:\.\d+)?)\s*([KMGT]?B)$/);
                var multipliers = {
                    'B': 1,
                    'KB': 1024,
                    'MB': 1024 * 1024,
                    'GB': 1024 * 1024 * 1024,
                    'TB': 1024 * 1024 * 1024 * 1024
                };
                
                if (matches) {
                    var size = parseFloat(matches[1]);
                    var unit = matches[2];
                    return size * multipliers[unit];
                }
                return 0;
            };
            
            // Reset filters button
            $('#resetFilters').on('click', function() {
                table.columns([1, 3, 4, 6]).every(function() {
                    var column = this;
                    $(column.header()).find('select').val('').trigger('change');
                });
                table.search('').draw();
                $('#resetFilters').hide();
            });
            
            // Show reset button when any filter is applied
            table.on('search.dt', function() {
                var hasFilter = false;
                table.columns().every(function() {
                    var column = this;
                    if (column.search() !== '') {
                        hasFilter = true;
                    }
                });
                if (table.search() !== '' || hasFilter) {
                    $('#resetFilters').show();
                } else {
                    $('#resetFilters').hide();
                }
            });
        });
        
        function testModel(model, server) {
            currentModel = model;
            currentServer = server;
            $('#testModelName').text(model);
            $('#testModal').modal('show');
        }
        
        function loadModel(modelName, serverName) {
            $.post('@Url.Action("LoadModel")', { model: modelName, server: serverName }, function(data) {
                if (data.success) {
                    toastr.success('Model úspěšně načten');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    toastr.error(data.error || 'Chyba při načítání modelu');
                }
            });
        }
        
        function unloadModel(modelName, serverName) {
            $.post('@Url.Action("UnloadModel")', { model: modelName, server: serverName }, function(data) {
                if (data.success) {
                    toastr.success('Model úspěšně uvolněn');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    toastr.error(data.error || 'Chyba při uvolňování modelu');
                }
            });
        }
        
        function deleteModel(modelName, serverName) {
            if (confirm('Opravdu chcete smazat model ' + modelName + '?')) {
                $.post('@Url.Action("DeleteModel")', { model: modelName, server: serverName }, function(data) {
                    if (data.success) {
                        toastr.success('Model úspěšně smazán');
                        setTimeout(() => location.reload(), 2000);
                    } else {
                        toastr.error(data.error || 'Chyba při mazání modelu');
                    }
                });
            }
        }
        
        function downloadModel() {
            const server = $('#downloadServer').val();
            const modelName = $('#downloadModelName').val();
            
            if (!server || !modelName) {
                toastr.error('Vyplňte všechna pole');
                return;
            }
            
            $('#downloadProgress').show();
            $('#downloadModal .btn').prop('disabled', true);
            
            $.post('@Url.Action("DownloadModel")', { model: modelName, server: server }, function(data) {
                if (data.success) {
                    toastr.success('Model úspěšně stažen');
                    setTimeout(() => location.reload(), 2000);
                } else {
                    toastr.error(data.error || 'Chyba při stahování modelu');
                }
            }).fail(function() {
                toastr.error('Chyba při stahování modelu');
            }).always(function() {
                $('#downloadProgress').hide();
                $('#downloadModal .btn').prop('disabled', false);
            });
        }
        
        $('#testForm').on('submit', function(e) {
            e.preventDefault();
            
            const prompt = $('#testPrompt').val();
            $('#testResult').hide();
            $('#testForm button').prop('disabled', true);
            
            $.post('@Url.Action("TestModel")', { 
                model: currentModel, 
                server: currentServer,
                prompt: prompt 
            }, function(data) {
                if (data.success) {
                    $('#responseText').text(data.response);
                    $('#responseTime').text(data.metrics.totalDurationMs.toFixed(0));
                    $('#tokensPerSecond').text(data.metrics.tokensPerSecond.toFixed(1));
                    $('#testResult').show();
                } else {
                    toastr.error(data.error || 'Chyba při testování modelu');
                }
            }).always(function() {
                $('#testForm button').prop('disabled', false);
            });
        });
        
        function syncAllModels() {
            toastr.info('Synchronizuji modely se servery...');
            
            $.post('@Url.Action("SyncModels")', {}, function(data) {
                if (data.success) {
                    toastr.success(data.message);
                    
                    // Show results for each server
                    if (data.results && data.results.length > 0) {
                        data.results.forEach(function(result) {
                            if (result.success) {
                                toastr.success(result.message);
                            } else {
                                toastr.warning(result.message);
                            }
                        });
                    }
                    
                    // Reload page after 2 seconds to show updated data
                    setTimeout(function() {
                        location.reload();
                    }, 2000);
                } else {
                    toastr.error(data.error || 'Chyba při synchronizaci');
                }
            }).fail(function(xhr, status, error) {
                toastr.error('Chyba při synchronizaci: ' + xhr.responseText);
            });
        }
    </script>
}
