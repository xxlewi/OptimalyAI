<div class="modal fade" id="testWorkflowModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">
                    <i class="fas fa-play"></i> Test Workflow - @ViewBag.Workflow.ProjectName
                </h5>
                <button type="button" class="close text-white" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Prototype Alert -->
                <div class="alert alert-success">
                    <i class="fas fa-flask"></i> <strong>Test Mode:</strong> 
                    Simulace spuštění workflow - žádné skutečné zpracování
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <h6><i class="fas fa-info-circle"></i> Informace o workflow</h6>
                        <dl>
                            <dt>Typ workflow:</dt>
                            <dd>@ViewBag.Workflow.WorkflowType</dd>
                            
                            <dt>Počet kroků:</dt>
                            <dd>@ViewBag.Workflow.Stages.Count</dd>
                            
                            <dt>Způsob spuštění:</dt>
                            <dd>@ViewBag.Workflow.TriggerType</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6><i class="fas fa-layer-group"></i> Kroky k testování</h6>
                        <div style="max-height: 200px; overflow-y: auto;">
                            @{
                                var workflow = ViewBag.Workflow as OptimalyAI.ViewModels.WorkflowPrototypeViewModel;
                                if (workflow != null && workflow.Stages != null)
                                {
                                    var orderedStages = workflow.Stages.OrderBy(s => s.Order).ToList();
                                    foreach (var stage in orderedStages)
                                    {
                                        <div class="mb-2">
                                            <span class="badge badge-primary">@stage.Order</span>
                                            <strong>@stage.Name</strong>
                                            @if (stage.UseReAct)
                                            {
                                                <span class="badge badge-info">ReAct</span>
                                            }
                                            <br>
                                            <small class="text-muted">
                                                @stage.ExecutionStrategy strategy, @stage.Tools.Count nástrojů
                                            </small>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
                
                <hr>
                
                <div class="form-group">
                    <label><i class="fas fa-cog"></i> Testovací parametry</label>
                    <div class="row">
                        <div class="col-md-6">
                            <input type="text" class="form-control" placeholder="testParam1" id="param1" value="demo value 1">
                        </div>
                        <div class="col-md-6">
                            <input type="text" class="form-control" placeholder="testParam2" id="param2" value="demo value 2">
                        </div>
                    </div>
                    <small class="text-muted">Volitelné parametry pro testování workflow</small>
                </div>
                
                <div id="executionResults" style="display: none;">
                    <h6><i class="fas fa-chart-line"></i> Výsledky simulace</h6>
                    <div id="executionStatus" class="mb-3"></div>
                    <div id="stageProgress"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">
                    <i class="fas fa-times"></i> Zavřít
                </button>
                <button type="button" class="btn btn-success" id="btnStartTest">
                    <i class="fas fa-play"></i> Spustit test
                </button>
                <button type="button" class="btn btn-warning" id="btnStopTest" style="display: none;">
                    <i class="fas fa-stop"></i> Zastavit test
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    let testExecution = null;
    
    $('#btnStartTest').on('click', function() {
        const parameters = {
            param1: $('#param1').val(),
            param2: $('#param2').val(),
            testMode: true
        };
        
        const btn = $(this);
        btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Spouštím...');
        
        // Simulate workflow execution
        $.post('/WorkflowPrototype/SimulateWorkflowExecution', {
            projectId: '@ViewBag.Workflow.ProjectId',
            parameters: parameters
        }, function(response) {
            if (response.success) {
                testExecution = response.result;
                startTestSimulation(testExecution);
                
                $('#btnStartTest').hide();
                $('#btnStopTest').show();
                $('#executionResults').show();
            } else {
                toastr.error(response.message);
            }
        }).always(function() {
            btn.prop('disabled', false).html('<i class="fas fa-play"></i> Spustit test');
        });
    });
    
    $('#btnStopTest').on('click', function() {
        if (testExecution) {
            testExecution.status = 'Cancelled';
            toastr.warning('Test workflow byl zastaven');
            
            $('#btnStopTest').hide();
            $('#btnStartTest').show();
        }
    });
    
    function startTestSimulation(execution) {
        const statusDiv = $('#executionStatus');
        const progressDiv = $('#stageProgress');
        
        statusDiv.html(`
            <div class="alert alert-info">
                <strong>Execution ID:</strong> ${execution.executionId}<br>
                <strong>Status:</strong> <span class="badge badge-primary">${execution.status}</span><br>
                <strong>Spuštěno:</strong> ${new Date(execution.startedAt).toLocaleString()}
            </div>
        `);
        
        // Simulate stage execution
        let currentStageIndex = 0;
        const stages = execution.stages;
        
        function simulateNextStage() {
            if (currentStageIndex >= stages.length || execution.status === 'Cancelled') {
                // Simulation completed
                statusDiv.find('.badge').removeClass('badge-primary').addClass('badge-success').text('Completed');
                toastr.success('Test workflow dokončen');
                $('#btnStopTest').hide();
                $('#btnStartTest').show();
                return;
            }
            
            const stage = stages[currentStageIndex];
            
            // Update progress
            const stageHtml = `
                <div class="card mb-2" id="stage-${stage.stageId}">
                    <div class="card-body py-2">
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <strong>${stage.name}</strong>
                            </div>
                            <div class="col-md-3">
                                <span class="badge badge-warning">Running</span>
                            </div>
                            <div class="col-md-3">
                                <div class="progress">
                                    <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: 0%"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            if (currentStageIndex === 0) {
                progressDiv.html(stageHtml);
            } else {
                progressDiv.append(stageHtml);
            }
            
            // Simulate progress
            const progressBar = $(`#stage-${stage.stageId} .progress-bar`);
            let progress = 0;
            
            const interval = setInterval(() => {
                if (execution.status === 'Cancelled') {
                    clearInterval(interval);
                    return;
                }
                
                progress += Math.random() * 20;
                if (progress >= 100) {
                    progress = 100;
                    progressBar.css('width', '100%').removeClass('progress-bar-animated');
                    $(`#stage-${stage.stageId} .badge`).removeClass('badge-warning').addClass('badge-success').text('Completed');
                    
                    clearInterval(interval);
                    currentStageIndex++;
                    
                    // Move to next stage after a delay
                    setTimeout(simulateNextStage, 500);
                } else {
                    progressBar.css('width', progress + '%');
                }
            }, 200);
        }
        
        // Start simulation after a short delay
        setTimeout(simulateNextStage, 1000);
    }
</script>