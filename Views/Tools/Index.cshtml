@{
    ViewData["Title"] = "AI Tools";
    Layout = "_Layout";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>
                    <i class="fas fa-tools"></i> AI Tools
                    <small class="text-muted">Interactive Testing</small>
                </h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item active">AI Tools</li>
                </ol>
            </div>
        </div>
    </div>
</section>

<section class="content">
    <div class="container-fluid">
        <!-- Statistics Cards -->
        <div class="row mb-3">
            <div class="col-lg-3 col-6">
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3 id="totalTools">-</h3>
                        <p>Celkem nástrojů</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-tools"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3 id="enabledTools">-</h3>
                        <p>Aktivní</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3 id="disabledTools">-</h3>
                        <p>Neaktivní</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-times-circle"></i>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-6">
                <div class="small-box bg-primary">
                    <div class="inner">
                        <h3 id="categoriesCount">-</h3>
                        <p>Kategorií</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-layer-group"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Search and Filter Section -->
        <div class="row mb-3">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-4">
                        <div class="input-group">
                            <input type="text" class="form-control" id="searchTools" 
                                   placeholder="Vyhledat nástroj..." autocomplete="off">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary" onclick="filterTools()">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select id="categoryFilter" class="form-control" onchange="filterTools()">
                            <option value="">Všechny kategorie</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <select id="statusFilter" class="form-control" onchange="filterTools()">
                            <option value="">Všechny stavy</option>
                            <option value="enabled">Pouze aktivní</option>
                            <option value="disabled">Pouze neaktivní</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-default" onclick="clearFilters()">
                            <i class="fas fa-times"></i> Vymazat
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tools Table -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Seznam AI nástrojů</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-primary btn-sm" onclick="refreshTools()">
                        <i class="fas fa-sync-alt"></i> Aktualizovat
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div id="loadingSpinner" class="text-center" style="display: none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <p class="mt-2">Načítání nástrojů...</p>
                </div>
                
                <table class="table table-bordered table-striped table-hover" id="toolsTable" style="display: none;">
                    <thead>
                        <tr>
                            <th>Nástroj</th>
                            <th>Kategorie</th>
                            <th>Parametry</th>
                            <th>Stav</th>
                            <th>Verze</th>
                            <th style="width: 200px">Akce</th>
                        </tr>
                    </thead>
                    <tbody id="toolsTableBody">
                        <!-- Tools will be loaded here dynamically -->
                    </tbody>
                </table>
                
                <div id="noToolsMessage" class="text-center py-5" style="display: none;">
                    <i class="fas fa-tools fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">Žádné nástroje</h4>
                    <p class="text-muted">Nebyly nalezeny žádné nástroje odpovídající vašim kritériím.</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Tool Execution Modal -->
<div class="modal fade" id="executeToolModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Spustit nástroj: <span id="modalToolName"></span></h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="executeToolForm">
                    <input type="hidden" id="modalToolId">
                    <div id="toolParameters">
                        <!-- Parameters will be generated dynamically -->
                    </div>
                </form>
                
                <!-- Execution Result -->
                <div id="executionResult" class="mt-3" style="display: none;">
                    <h6>Výsledek:</h6>
                    <div class="execution-result border p-3 bg-light" style="max-height: 300px; overflow-y: auto;">
                        <pre id="resultContent"></pre>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Zavřít</button>
                <button type="button" class="btn btn-warning" onclick="testTool()">
                    <i class="fas fa-vial"></i> Test s ukázkovými daty
                </button>
                <button type="button" class="btn btn-primary" onclick="executeTool()">
                    <i class="fas fa-play"></i> Spustit
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Tool Details Modal -->
<div class="modal fade" id="toolDetailsModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Detail nástroje: <span id="detailsToolName"></span></h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body" id="toolDetailsContent">
                <!-- Details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Zavřít</button>
                <button type="button" class="btn btn-primary" onclick="executeFromDetails()">
                    <i class="fas fa-play"></i> Spustit nástroj
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let allTools = [];
        let filteredTools = [];
        let currentTool = null;

        $(document).ready(function() {
            loadTools();
            loadStatistics();
            loadCategories();
            
            // Enter key search
            $('#searchTools').keypress(function(e) {
                if (e.which === 13) {
                    filterTools();
                }
            });
            
            // Real-time search
            $('#searchTools').on('keyup', function() {
                filterTools();
            });
        });

        async function loadTools() {
            showLoading(true);
            try {
                const response = await fetch('/api/tools');
                const data = await response.json();
                
                if (data.success) {
                    allTools = data.data;
                    filteredTools = [...allTools];
                    renderTools(filteredTools);
                } else {
                    showError('Nepodařilo se načíst nástroje: ' + (data.message || 'Neznámá chyba'));
                }
            } catch (error) {
                showError('Chyba při načítání nástrojů: ' + error.message);
            } finally {
                showLoading(false);
            }
        }

        async function loadStatistics() {
            try {
                const response = await fetch('/api/tools/statistics');
                const data = await response.json();
                
                if (data.success) {
                    const stats = data.data;
                    $('#totalTools').text(stats.totalTools);
                    $('#enabledTools').text(stats.enabledTools);
                    $('#disabledTools').text(stats.disabledTools);
                    $('#categoriesCount').text(Object.keys(stats.categories).length);
                }
            } catch (error) {
                console.error('Error loading statistics:', error);
            }
        }

        async function loadCategories() {
            try {
                const response = await fetch('/api/tools/categories');
                const data = await response.json();
                
                if (data.success) {
                    const categoryFilter = $('#categoryFilter');
                    data.data.forEach(category => {
                        categoryFilter.append(`<option value="${category}">${category}</option>`);
                    });
                }
            } catch (error) {
                console.error('Error loading categories:', error);
            }
        }

        function renderTools(tools) {
            const tableBody = $('#toolsTableBody');
            const table = $('#toolsTable');
            const noToolsMessage = $('#noToolsMessage');
            
            tableBody.empty();

            if (tools.length === 0) {
                table.hide();
                noToolsMessage.show();
                return;
            }

            table.show();
            noToolsMessage.hide();

            tools.forEach(tool => {
                const toolRow = createToolRow(tool);
                tableBody.append(toolRow);
            });
            
            updateFilterInfo();
        }

        function createToolRow(tool) {
            const statusClass = tool.isEnabled ? 'success' : 'danger';
            const statusIcon = tool.isEnabled ? 'fa-check-circle' : 'fa-times-circle';
            const statusText = tool.isEnabled ? 'Aktivní' : 'Neaktivní';
            
            const parametersCount = tool.parameters.length;
            const requiredParams = tool.parameters.filter(p => p.isRequired).length;
            
            return `
                <tr data-tool-id="${tool.id}" data-category="${tool.category.toLowerCase()}" 
                    data-name="${tool.name.toLowerCase()}" data-status="${tool.isEnabled ? 'enabled' : 'disabled'}">
                    <td>
                        <div>
                            <strong>${tool.name}</strong>
                            <br>
                            <small class="text-muted">
                                ${tool.description || 'ID: ' + tool.id.substring(0, 8)}
                            </small>
                        </div>
                    </td>
                    <td>
                        <span class="badge badge-info">
                            <i class="fas fa-layer-group"></i> ${tool.category}
                        </span>
                    </td>
                    <td>
                        <div>
                            <span class="badge badge-secondary">
                                <i class="fas fa-cog"></i> ${parametersCount} parametrů
                            </span>
                            <br>
                            <small class="text-muted">
                                <i class="fas fa-exclamation-circle"></i> ${requiredParams} povinných
                            </small>
                        </div>
                    </td>
                    <td>
                        <span class="badge badge-${statusClass}">
                            <i class="fas ${statusIcon}"></i> ${statusText}
                        </span>
                    </td>
                    <td>
                        <small><i class="fas fa-tag"></i> v${tool.version}</small>
                    </td>
                    <td class="text-center align-middle">
                        <button type="button" class="btn btn-success btn-sm" 
                                onclick="showExecuteModal('${tool.id}')" 
                                ${!tool.isEnabled ? 'disabled' : ''} 
                                title="Spustit nástroj">
                            <i class="fas fa-play"></i>
                        </button>
                        <button type="button" class="btn btn-info btn-sm ml-1" 
                                onclick="showToolDetails('${tool.id}')" title="Detail nástroje">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button type="button" class="btn btn-warning btn-sm ml-1" 
                                onclick="testTool('${tool.id}')" 
                                ${!tool.isEnabled ? 'disabled' : ''} 
                                title="Test s ukázkovými daty">
                            <i class="fas fa-vial"></i>
                        </button>
                    </td>
                </tr>
            `;
        }

        function filterTools() {
            const searchTerm = $('#searchTools').val().toLowerCase();
            const categoryFilter = $('#categoryFilter').val().toLowerCase();
            const statusFilter = $('#statusFilter').val();
            
            $('#toolsTable tbody tr').each(function() {
                const row = $(this);
                const name = row.attr('data-name') || '';
                const category = row.attr('data-category') || '';
                const status = row.attr('data-status') || '';
                const description = row.find('td:first small').text().toLowerCase();
                
                // Search filter
                const searchMatch = !searchTerm || 
                    name.includes(searchTerm) || 
                    description.includes(searchTerm) ||
                    category.includes(searchTerm);
                
                // Category filter
                const categoryMatch = !categoryFilter || category.includes(categoryFilter);
                
                // Status filter
                const statusMatch = !statusFilter || status === statusFilter;
                
                if (searchMatch && categoryMatch && statusMatch) {
                    row.show();
                } else {
                    row.hide();
                }
            });
            
            updateFilterInfo();
        }

        function updateFilterInfo() {
            const visibleCount = $('#toolsTable tbody tr:visible').length;
            const totalCount = $('#toolsTable tbody tr').length;
            
            if (visibleCount < totalCount) {
                if ($('#filterInfo').length === 0) {
                    $('.card-header').append(`<span id="filterInfo" class="float-right text-muted"></span>`);
                }
                $('#filterInfo').text(`Zobrazeno ${visibleCount} z ${totalCount} nástrojů`);
            } else {
                $('#filterInfo').remove();
            }
        }

        function clearFilters() {
            $('#searchTools').val('');
            $('#categoryFilter').val('');
            $('#statusFilter').val('');
            filterTools();
        }

        function refreshTools() {
            loadTools();
            loadStatistics();
        }

        async function showToolDetails(toolId) {
            try {
                const response = await fetch(`/api/tools/${toolId}`);
                const data = await response.json();
                
                if (data.success) {
                    const tool = data.data;
                    $('#detailsToolName').text(tool.name);
                    
                    const detailsHtml = `
                        <div class="row">
                            <div class="col-md-6">
                                <h6>Základní informace</h6>
                                <table class="table table-sm">
                                    <tr><td><strong>ID:</strong></td><td>${tool.id}</td></tr>
                                    <tr><td><strong>Název:</strong></td><td>${tool.name}</td></tr>
                                    <tr><td><strong>Kategorie:</strong></td><td>${tool.category}</td></tr>
                                    <tr><td><strong>Verze:</strong></td><td>${tool.version}</td></tr>
                                    <tr><td><strong>Stav:</strong></td><td>
                                        <span class="badge badge-${tool.isEnabled ? 'success' : 'danger'}">
                                            ${tool.isEnabled ? 'Aktivní' : 'Neaktivní'}
                                        </span>
                                    </td></tr>
                                </table>
                                
                                <h6>Popis</h6>
                                <p>${tool.description}</p>
                            </div>
                            <div class="col-md-6">
                                <h6>Parametry (${tool.parameters.length})</h6>
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>Název</th>
                                                <th>Typ</th>
                                                <th>Povinný</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            ${tool.parameters.map(p => `
                                                <tr>
                                                    <td>${p.name}</td>
                                                    <td><code>${p.type}</code></td>
                                                    <td>${p.isRequired ? '<i class="fas fa-check text-success"></i>' : '<i class="fas fa-times text-muted"></i>'}</td>
                                                </tr>
                                            `).join('')}
                                        </tbody>
                                    </table>
                                </div>
                                
                                <h6>Schopnosti (${tool.capabilities.length})</h6>
                                <ul class="list-unstyled">
                                    ${tool.capabilities.map(c => `
                                        <li><i class="fas fa-check-circle text-success"></i> ${c.description}</li>
                                    `).join('')}
                                </ul>
                            </div>
                        </div>
                    `;
                    
                    $('#toolDetailsContent').html(detailsHtml);
                    currentTool = tool;
                    $('#toolDetailsModal').modal('show');
                } else {
                    showError('Nepodařilo se načíst detail nástroje: ' + (data.message || 'Neznámá chyba'));
                }
            } catch (error) {
                showError('Chyba při načítání detailu nástroje: ' + error.message);
            }
        }

        function showExecuteModal(toolId) {
            const tool = allTools.find(t => t.id === toolId);
            if (!tool) return;
            
            currentTool = tool;
            $('#modalToolName').text(tool.name);
            $('#modalToolId').val(tool.id);
            
            // Generate parameter form
            const parametersHtml = tool.parameters.map(param => {
                const required = param.isRequired ? 'required' : '';
                const helpText = param.description ? `<small class="form-text text-muted">${param.description}</small>` : '';
                
                let inputHtml = '';
                
                if (param.allowedValues && param.allowedValues.length > 0) {
                    inputHtml = `
                        <select class="form-control" id="param_${param.name}" name="${param.name}" ${required}>
                            <option value="">Vyberte ${param.name}</option>
                            ${param.allowedValues.map(val => `<option value="${val}">${val}</option>`).join('')}
                        </select>
                    `;
                } else if (param.type === 'Boolean') {
                    inputHtml = `
                        <select class="form-control" id="param_${param.name}" name="${param.name}" ${required}>
                            <option value="">Vyberte hodnotu</option>
                            <option value="true">Ano</option>
                            <option value="false">Ne</option>
                        </select>
                    `;
                } else {
                    const inputType = param.type === 'Integer' || param.type === 'Decimal' ? 'number' : 'text';
                    const placeholder = param.defaultValue ? `Výchozí: ${param.defaultValue}` : `Zadejte ${param.name}`;
                    
                    inputHtml = `
                        <input type="${inputType}" class="form-control" id="param_${param.name}" 
                               name="${param.name}" placeholder="${placeholder}" 
                               value="${param.defaultValue || ''}" ${required}>
                    `;
                }
                
                return `
                    <div class="form-group">
                        <label for="param_${param.name}">
                            ${param.name} 
                            ${param.isRequired ? '<span class="text-danger">*</span>' : ''}
                            <span class="badge badge-secondary">${param.type}</span>
                        </label>
                        ${inputHtml}
                        ${helpText}
                    </div>
                `;
            }).join('');
            
            $('#toolParameters').html(parametersHtml);
            $('#executionResult').hide();
            $('#executeToolModal').modal('show');
        }

        async function executeTool() {
            if (!currentTool) return;
            
            const formData = new FormData($('#executeToolForm')[0]);
            const parameters = {};
            
            for (let [key, value] of formData.entries()) {
                if (value) {
                    parameters[key] = value;
                }
            }
            
            const requestData = {
                toolId: currentTool.id,
                parameters: parameters,
                context: {
                    userId: 'web-user',
                    sessionId: 'web-session-' + Date.now(),
                    conversationId: 'web-conversation',
                    executionTimeout: '00:05:00'
                }
            };
            
            try {
                const response = await fetch('/api/tools/execute', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestData)
                });
                
                const data = await response.json();
                
                $('#executionResult').show();
                
                if (data.success) {
                    const result = data.data;
                    $('#resultContent').text(JSON.stringify(result, null, 2));
                    $('#resultContent').parent().removeClass('border-danger').addClass('border-success');
                } else {
                    $('#resultContent').text('Chyba: ' + (data.message || 'Neznámá chyba'));
                    $('#resultContent').parent().removeClass('border-success').addClass('border-danger');
                }
            } catch (error) {
                $('#executionResult').show();
                $('#resultContent').text('Síťová chyba: ' + error.message);
                $('#resultContent').parent().removeClass('border-success').addClass('border-danger');
            }
        }

        async function testTool(toolId = null) {
            const targetToolId = toolId || (currentTool ? currentTool.id : null);
            if (!targetToolId) return;
            
            try {
                const response = await fetch(`/api/tools/${targetToolId}/test`, {
                    method: 'POST'
                });
                
                const data = await response.json();
                
                if (!currentTool && toolId) {
                    // If called from table row, show the execute modal first
                    showExecuteModal(toolId);
                    setTimeout(() => {
                        displayTestResult(data);
                    }, 500);
                } else {
                    displayTestResult(data);
                }
            } catch (error) {
                if (currentTool) {
                    $('#executionResult').show();
                    $('#resultContent').text('Síťová chyba: ' + error.message);
                    $('#resultContent').parent().removeClass('border-success').addClass('border-danger');
                } else {
                    showError('Chyba při testování nástroje: ' + error.message);
                }
            }
        }

        function displayTestResult(data) {
            $('#executionResult').show();
            
            if (data.success) {
                $('#resultContent').text(JSON.stringify(data.data, null, 2));
                $('#resultContent').parent().removeClass('border-danger').addClass('border-success');
            } else {
                $('#resultContent').text('Test chyba: ' + (data.message || 'Neznámá chyba'));
                $('#resultContent').parent().removeClass('border-success').addClass('border-danger');
            }
        }

        function executeFromDetails() {
            $('#toolDetailsModal').modal('hide');
            setTimeout(() => {
                showExecuteModal(currentTool.id);
            }, 300);
        }

        function showLoading(show) {
            if (show) {
                $('#loadingSpinner').show();
                $('#toolsTable').hide();
                $('#noToolsMessage').hide();
            } else {
                $('#loadingSpinner').hide();
            }
        }

        function showError(message) {
            if (typeof toastr !== 'undefined') {
                toastr.error(message);
            } else {
                alert(message);
            }
        }
    </script>
}