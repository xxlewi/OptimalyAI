@model OAI.ViewModels.Laboratory.WorkflowDesignerViewModel

@{
    ViewData["Title"] = "Draw.io Workflow Designer - Laboratory";
}

@section Styles {
    <style>
        .drawio-container {
            height: calc(100vh - 120px);
            background: #f8f9fa;
            border-radius: 8px;
            overflow: hidden;
            position: relative;
        }
        
        .drawio-toolbar {
            background: #2c3e50;
            color: white;
            padding: 12px 20px;
            border-bottom: 1px solid #34495e;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .drawio-toolbar h4 {
            margin: 0;
            color: #ecf0f1;
            font-weight: 500;
        }
        
        .drawio-actions {
            display: flex;
            gap: 10px;
        }
        
        .drawio-main {
            display: flex;
            height: calc(100% - 60px);
        }
        
        .drawio-sidebar {
            width: 280px;
            background: #ffffff;
            border-right: 1px solid #dee2e6;
            overflow-y: auto;
            box-shadow: 2px 0 4px rgba(0,0,0,0.05);
        }
        
        .drawio-canvas {
            flex: 1;
            background: #ffffff;
            position: relative;
            overflow: hidden;
        }
        
        .sidebar-section {
            padding: 15px;
            border-bottom: 1px solid #e9ecef;
        }
        
        .sidebar-section h6 {
            margin: 0 0 10px 0;
            color: #495057;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 11px;
            letter-spacing: 0.5px;
        }
        
        .shape-item {
            display: block;
            padding: 8px 12px;
            margin: 3px 0;
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            color: #495057;
            font-size: 13px;
        }
        
        .shape-item:hover {
            background: #e9ecef;
            border-color: #007bff;
            transform: translateY(-1px);
            text-decoration: none;
            color: #007bff;
        }
        
        .shape-item i {
            margin-right: 8px;
            width: 16px;
            text-align: center;
        }
        
        #drawio-frame {
            width: 100%;
            height: 100%;
            border: none;
            background: white;
        }
        
        .loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.9);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }
        
        .loading-content {
            text-align: center;
            color: #6c757d;
        }
        
        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #007bff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .workflow-info {
            background: #e3f2fd;
            border: 1px solid #bbdefb;
            border-radius: 6px;
            padding: 12px;
            margin-bottom: 15px;
        }
        
        .workflow-info h6 {
            color: #1976d2;
            margin: 0 0 5px 0;
        }
        
        .workflow-info small {
            color: #666;
        }
    </style>
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>
                    <i class="fas fa-draw-polygon"></i> Draw.io Workflow Designer
                    <small class="text-muted">Vizuální návrh procesů</small>
                </h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item">Laboratory</li>
                    <li class="breadcrumb-item active">Draw.io Demo</li>
                </ol>
            </div>
        </div>
    </div>
</section>

<section class="content">
    <div class="container-fluid">
        <div class="drawio-container">
            <!-- Toolbar -->
            <div class="drawio-toolbar">
                <h4><i class="fas fa-draw-polygon me-2"></i>Draw.io Workflow Designer</h4>
                <div class="drawio-actions">
                    <button type="button" class="btn btn-light btn-sm" onclick="newDiagram()">
                        <i class="fas fa-plus"></i> Nový
                    </button>
                    <button type="button" class="btn btn-light btn-sm" onclick="saveDiagram()">
                        <i class="fas fa-save"></i> Uložit
                    </button>
                    <button type="button" class="btn btn-light btn-sm" onclick="exportDiagram()">
                        <i class="fas fa-download"></i> Export
                    </button>
                    <button type="button" class="btn btn-light btn-sm" onclick="fullscreen()">
                        <i class="fas fa-expand"></i> Fullscreen
                    </button>
                </div>
            </div>
            
            <!-- Main Content -->
            <div class="drawio-main">
                <!-- Sidebar -->
                <div class="drawio-sidebar">
                    <!-- Workflow Info -->
                    <div class="sidebar-section">
                        <div class="workflow-info">
                            <h6><i class="fas fa-info-circle"></i> Demo Workflow</h6>
                            <small>@Model.Workflow.Name</small><br>
                            <small class="text-muted">@Model.Workflow.Description</small>
                        </div>
                    </div>
                    
                    <!-- Workflow Elements -->
                    <div class="sidebar-section">
                        <h6><i class="fas fa-shapes"></i> Workflow Elements</h6>
                        <a href="#" class="shape-item" data-shape="start">
                            <i class="fas fa-play text-success"></i> Start Event
                        </a>
                        <a href="#" class="shape-item" data-shape="end">
                            <i class="fas fa-stop text-danger"></i> End Event
                        </a>
                        <a href="#" class="shape-item" data-shape="task">
                            <i class="fas fa-tasks text-primary"></i> Task
                        </a>
                        <a href="#" class="shape-item" data-shape="decision">
                            <i class="fas fa-code-branch text-warning"></i> Decision
                        </a>
                        <a href="#" class="shape-item" data-shape="parallel">
                            <i class="fas fa-equals text-info"></i> Parallel Gateway
                        </a>
                        <a href="#" class="shape-item" data-shape="subprocess">
                            <i class="fas fa-layer-group text-secondary"></i> Sub-process
                        </a>
                    </div>
                    
                    <!-- AI Tools -->
                    <div class="sidebar-section">
                        <h6><i class="fas fa-robot"></i> AI Tools</h6>
                        @foreach (var tool in Model.Tools.Take(6))
                        {
                            <a href="#" class="shape-item" data-tool="@tool.Id">
                                <i class="fas fa-cog text-primary"></i> @tool.Name
                            </a>
                        }
                    </div>
                    
                    <!-- I/O Adapters -->
                    <div class="sidebar-section">
                        <h6><i class="fas fa-plug"></i> I/O Adapters</h6>
                        <a href="#" class="shape-item" data-adapter="database_input">
                            <i class="fas fa-database text-info"></i> Database Input
                        </a>
                        <a href="#" class="shape-item" data-adapter="excel_input">
                            <i class="fas fa-file-excel text-success"></i> Excel Input
                        </a>
                        <a href="#" class="shape-item" data-adapter="api_output">
                            <i class="fas fa-cloud text-warning"></i> API Output
                        </a>
                        <a href="#" class="shape-item" data-adapter="email_output">
                            <i class="fas fa-envelope text-danger"></i> Email Output
                        </a>
                    </div>
                </div>
                
                <!-- Canvas -->
                <div class="drawio-canvas">
                    <div class="loading-overlay" id="loading-overlay">
                        <div class="loading-content">
                            <div class="loading-spinner"></div>
                            <div>Načítání Draw.io editoru...</div>
                        </div>
                    </div>
                    <iframe id="drawio-frame" src="about:blank"></iframe>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Draw.io configuration
        const drawioConfig = {
            theme: 'kennedy',
            lang: 'cs',
            plugins: ['bpmn', 'flowchart'],
            toolbar: true,
            menubar: true,
            sidebar: false, // We have our own sidebar
            libraries: true,
            outline: false,
            format: 'svg'
        };
        
        // Current workflow data
        let currentWorkflow = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Workflow));
        let isDirty = false;
        
        $(document).ready(function() {
            initializeDrawIO();
            bindEvents();
        });
        
        function initializeDrawIO() {
            // Create Draw.io URL with configuration
            const baseUrl = 'https://embed.diagrams.net/';
            const params = new URLSearchParams({
                embed: '1',
                ui: drawioConfig.theme,
                lang: drawioConfig.lang,
                libraries: '1',
                saveAndExit: '1',
                noSaveBtn: '0',
                noExitBtn: '0',
                toolbar: '1',
                menubar: '1',
                sidebar: '0',
                outline: '0',
                format: drawioConfig.format,
                spin: '1'
            });
            
            const drawioUrl = `${baseUrl}?${params.toString()}`;
            
            // Load Draw.io in iframe
            const iframe = document.getElementById('drawio-frame');
            iframe.src = drawioUrl;
            
            // Handle iframe load
            iframe.onload = function() {
                setTimeout(() => {
                    document.getElementById('loading-overlay').style.display = 'none';
                    
                    // Initialize with demo workflow if available
                    if (currentWorkflow && currentWorkflow.steps && currentWorkflow.steps.length > 0) {
                        createDemoWorkflow();
                    }
                }, 2000);
            };
            
            // Listen for messages from Draw.io
            window.addEventListener('message', handleDrawIOMessage);
        }
        
        function handleDrawIOMessage(event) {
            if (event.data.length > 0) {
                try {
                    const msg = JSON.parse(event.data);
                    
                    switch (msg.event) {
                        case 'init':
                            console.log('Draw.io initialized');
                            break;
                        case 'save':
                            handleSave(msg.xml);
                            break;
                        case 'exit':
                            if (isDirty) {
                                if (confirm('Máte neuložené změny. Opravdu chcete odejít?')) {
                                    window.location.href = '/Laboratory';
                                }
                            } else {
                                window.location.href = '/Laboratory';
                            }
                            break;
                        case 'configure':
                            console.log('Draw.io configured');
                            break;
                    }
                } catch (e) {
                    console.log('Non-JSON message from Draw.io:', event.data);
                }
            }
        }
        
        function createDemoWorkflow() {
            // Create a simple demo workflow based on our data
            const demoXml = `<?xml version="1.0" encoding="UTF-8"?>
<mxfile host="embed.diagrams.net" modified="2023-12-15T10:00:00.000Z" agent="OptimalyAI" version="20.6.0" etag="demo" type="embed">
  <diagram name="Demo Workflow" id="demo-workflow">
    <mxGraphModel dx="1422" dy="794" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0"/>
        <mxCell id="1" parent="0"/>
        <mxCell id="start" value="Start" style="ellipse;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="100" y="100" width="80" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="task1" value="${currentWorkflow.steps[0]?.name || 'Web Search'}" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="250" y="100" width="120" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="decision" value="Results?" style="rhombus;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="420" y="80" width="100" height="100" as="geometry"/>
        </mxCell>
        <mxCell id="process" value="Process Data" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="580" y="50" width="120" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="no-results" value="No Results" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="580" y="150" width="120" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="end" value="End" style="ellipse;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="750" y="100" width="80" height="60" as="geometry"/>
        </mxCell>
        <mxCell id="arrow1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="start" target="task1">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="arrow2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="task1" target="decision">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="arrow3" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="decision" target="process">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="arrow4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="decision" target="no-results">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="arrow5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="process" target="end">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="arrow6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="no-results" target="end">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>`;
            
            // Send XML to Draw.io
            const iframe = document.getElementById('drawio-frame');
            if (iframe.contentWindow) {
                iframe.contentWindow.postMessage(JSON.stringify({
                    action: 'load',
                    xml: demoXml
                }), '*');
            }
        }
        
        function bindEvents() {
            // Sidebar shape clicks
            $('.shape-item').on('click', function(e) {
                e.preventDefault();
                const shape = $(this).data('shape');
                const tool = $(this).data('tool');
                const adapter = $(this).data('adapter');
                
                if (shape) {
                    insertShape(shape);
                } else if (tool) {
                    insertTool(tool);
                } else if (adapter) {
                    insertAdapter(adapter);
                }
                
                // Visual feedback
                $(this).addClass('bg-primary text-white');
                setTimeout(() => {
                    $(this).removeClass('bg-primary text-white');
                }, 200);
            });
        }
        
        function insertShape(shapeType) {
            // Send message to Draw.io to insert shape
            const iframe = document.getElementById('drawio-frame');
            if (iframe.contentWindow) {
                iframe.contentWindow.postMessage(JSON.stringify({
                    action: 'template',
                    xml: getShapeTemplate(shapeType)
                }), '*');
            }
            toastr.info(`Přidán element: ${shapeType}`);
        }
        
        function insertTool(toolId) {
            toastr.info(`Přidán AI nástroj: ${toolId}`);
        }
        
        function insertAdapter(adapterId) {
            toastr.info(`Přidán I/O adaptér: ${adapterId}`);
        }
        
        function getShapeTemplate(shapeType) {
            const templates = {
                start: '<mxCell value="Start" style="ellipse;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1"><mxGeometry x="20" y="20" width="80" height="60" as="geometry"/></mxCell>',
                end: '<mxCell value="End" style="ellipse;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1"><mxGeometry x="20" y="20" width="80" height="60" as="geometry"/></mxCell>',
                task: '<mxCell value="Task" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1"><mxGeometry x="20" y="20" width="120" height="60" as="geometry"/></mxCell>',
                decision: '<mxCell value="Decision" style="rhombus;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1"><mxGeometry x="20" y="20" width="100" height="100" as="geometry"/></mxCell>',
                parallel: '<mxCell value="+" style="rhombus;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;" vertex="1"><mxGeometry x="20" y="20" width="60" height="60" as="geometry"/></mxCell>',
                subprocess: '<mxCell value="Sub-process" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#f5f5f5;strokeColor=#666666;dashed=1;" vertex="1"><mxGeometry x="20" y="20" width="120" height="60" as="geometry"/></mxCell>'
            };
            return templates[shapeType] || templates.task;
        }
        
        function handleSave(xml) {
            // Save workflow XML
            $.ajax({
                url: '/Laboratory/SaveWorkflow',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    name: currentWorkflow.name,
                    description: currentWorkflow.description,
                    xml: xml,
                    type: 'drawio'
                }),
                success: function(response) {
                    if (response.success) {
                        toastr.success('Workflow byl úspěšně uložen');
                        isDirty = false;
                    } else {
                        toastr.error('Chyba při ukládání: ' + response.message);
                    }
                },
                error: function() {
                    toastr.error('Chyba při ukládání workflow');
                }
            });
        }
        
        // Toolbar functions
        function newDiagram() {
            if (isDirty && !confirm('Máte neuložené změny. Opravdu chcete vytvořit nový diagram?')) {
                return;
            }
            
            const iframe = document.getElementById('drawio-frame');
            if (iframe.contentWindow) {
                iframe.contentWindow.postMessage(JSON.stringify({
                    action: 'load',
                    xml: ''
                }), '*');
            }
            isDirty = false;
            toastr.info('Nový diagram vytvořen');
        }
        
        function saveDiagram() {
            const iframe = document.getElementById('drawio-frame');
            if (iframe.contentWindow) {
                iframe.contentWindow.postMessage(JSON.stringify({
                    action: 'export',
                    format: 'xml'
                }), '*');
            }
        }
        
        function exportDiagram() {
            const iframe = document.getElementById('drawio-frame');
            if (iframe.contentWindow) {
                iframe.contentWindow.postMessage(JSON.stringify({
                    action: 'export',
                    format: 'png'
                }), '*');
            }
            toastr.info('Export zahájen...');
        }
        
        function fullscreen() {
            const container = document.querySelector('.drawio-container');
            if (container.requestFullscreen) {
                container.requestFullscreen();
            } else if (container.webkitRequestFullscreen) {
                container.webkitRequestFullscreen();
            } else if (container.msRequestFullscreen) {
                container.msRequestFullscreen();
            }
        }
        
        // Track changes
        window.addEventListener('message', function(event) {
            if (event.data.includes('mxGraphModel')) {
                isDirty = true;
            }
        });
        
        // Warn before leaving
        window.addEventListener('beforeunload', function(e) {
            if (isDirty) {
                e.preventDefault();
                e.returnValue = '';
            }
        });
    </script>
}